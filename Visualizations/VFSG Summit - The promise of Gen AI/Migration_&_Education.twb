<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Migration+ (SWOC_Tables_Migration_Education)' inline='true' name='federated.0qr1dpb0iwx7lq1gulf5y0wl9k70' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='SWOC_Tables_Migration_Education' name='excel-direct.0m7pspr006ztfp1795kac08y22df'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ljcoo/Coding/Projects/Viz_for_Social_Good/data/VFSG Summit - The promise of Gen AI/SWOC_Tables_Migration_Education.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0m7pspr006ztfp1795kac08y22df' name='Economic Indicators Summary' table='[&apos;Economic Indicators Summary$&apos;]' type='table'>
          <columns gridOrigin='A1:M14:no:A1:M14:0' header='yes' outcome='2'>
            <column datatype='string' name='Countries and areas' ordinal='0' />
            <column datatype='real' name='Government revenue as % of GDP 2015–2023 ®' ordinal='1' />
            <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of GDP) (Total)' ordinal='2' />
            <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of GDP) (On health)' ordinal='3' />
            <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of GDP) (On education)' ordinal='4' />
            <column datatype='string' name='Government Expenditure 2015–2023 (R)  (As % of GDP) (On social protection)' ordinal='5' />
            <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of government budget) (On health)' ordinal='6' />
            <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of government budget) (On education)' ordinal='7' />
            <column datatype='integer' name='Government Expenditure 2015–2023 (R)  (As % of government budget) (On social protection)' ordinal='8' />
            <column datatype='real' name='Official development assistance 2015–2023 (R) (Inflow in millions US$)' ordinal='9' />
            <column datatype='real' name='Official development assistance 2015–2023 (R) (Inflow as a % of recipient GNI)' ordinal='10' />
            <column datatype='string' name='Official development assistance 2015–2023 (R) (Outflow in millions US$)' ordinal='11' />
            <column datatype='string' name='Official development assistance 2015–2023 (R) (Ouflow as a % of donor GNI)' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.0m7pspr006ztfp1795kac08y22df' name='Migration' table='[Migration$]' type='table'>
            <columns gridOrigin='A1:R203:no:A1:R203:0' header='yes' outcome='2'>
              <column datatype='string' name='Countries and areas' ordinal='0' />
              <column datatype='integer' name='International migrant stock 2020 (Total (thousands))' ordinal='1' />
              <column datatype='integer' name='International migrant stock 2020 (Under 18 (thousands))' ordinal='2' />
              <column datatype='integer' name='International migrant stock 2020 (Total as share of national population (%))' ordinal='3' />
              <column datatype='integer' name='Refugees by asylum country 2023 (Total)' ordinal='4' />
              <column datatype='integer' name='Refugees by asylum country 2023 (Under 18)' ordinal='5' />
              <column datatype='integer' name='Refugees by asylum country  2023 (Per 1,000 population)' ordinal='6' />
              <column datatype='integer' name='Refugees by asylum country 2023 (Per 1 US$ GNI per capita)' ordinal='7' />
              <column datatype='integer' name='Refugees by origin country 2023 (Total)' ordinal='8' />
              <column datatype='integer' name='Refugees by origin country 2023 (Under 18)' ordinal='9' />
              <column datatype='integer' name='Internally displaced persons (IDPs) 2023 (Total (T))' ordinal='10' />
              <column datatype='integer' name='Internally displaced persons (IDPs) 2023 (Under 18 (Ru))' ordinal='11' />
              <column datatype='integer' name='Internally displaced persons (IDPs) 2023 (Share due to conflict and violence (%) (Sd))' ordinal='12' />
              <column datatype='integer' name='Internally displaced persons (IDPs) 2023 (Share due to disaster (%) (Sd))' ordinal='13' />
              <column datatype='integer' name='New internal displacements 2023 (Total (T))' ordinal='14' />
              <column datatype='integer' name='New internal displacements 2023 (Under 18 (Ru))' ordinal='15' />
              <column datatype='integer' name='New internal displacements 2023 (Share due to conflict and violence (%) (Sd))' ordinal='16' />
              <column datatype='integer' name='New internal displacements 2023 (Share due to disaster (%) (Sd))' ordinal='17' />
            </columns>
          </relation>
          <relation connection='excel-direct.0m7pspr006ztfp1795kac08y22df' name='Economic Indicators Summary' table='[&apos;Economic Indicators Summary$&apos;]' type='table'>
            <columns gridOrigin='A1:M14:no:A1:M14:0' header='yes' outcome='2'>
              <column datatype='string' name='Countries and areas' ordinal='0' />
              <column datatype='real' name='Government revenue as % of GDP 2015–2023 ®' ordinal='1' />
              <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of GDP) (Total)' ordinal='2' />
              <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of GDP) (On health)' ordinal='3' />
              <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of GDP) (On education)' ordinal='4' />
              <column datatype='string' name='Government Expenditure 2015–2023 (R)  (As % of GDP) (On social protection)' ordinal='5' />
              <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of government budget) (On health)' ordinal='6' />
              <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of government budget) (On education)' ordinal='7' />
              <column datatype='integer' name='Government Expenditure 2015–2023 (R)  (As % of government budget) (On social protection)' ordinal='8' />
              <column datatype='real' name='Official development assistance 2015–2023 (R) (Inflow in millions US$)' ordinal='9' />
              <column datatype='real' name='Official development assistance 2015–2023 (R) (Inflow as a % of recipient GNI)' ordinal='10' />
              <column datatype='string' name='Official development assistance 2015–2023 (R) (Outflow in millions US$)' ordinal='11' />
              <column datatype='string' name='Official development assistance 2015–2023 (R) (Ouflow as a % of donor GNI)' ordinal='12' />
            </columns>
          </relation>
          <relation connection='excel-direct.0m7pspr006ztfp1795kac08y22df' name='Economic Indicators' table='[&apos;Economic Indicators$&apos;]' type='table'>
            <columns gridOrigin='A1:M203:no:A1:M203:0' header='yes' outcome='2'>
              <column datatype='string' name='Countries and areas' ordinal='0' />
              <column datatype='real' name='Government revenue as % of GDP 2015–2023 ®' ordinal='1' />
              <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of GDP) (Total)' ordinal='2' />
              <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of GDP) (On health)' ordinal='3' />
              <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of GDP) (On education)' ordinal='4' />
              <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of GDP) (On social protection)' ordinal='5' />
              <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of government budget) (On health)' ordinal='6' />
              <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of government budget) (On education)' ordinal='7' />
              <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of government budget) (On social protection)' ordinal='8' />
              <column datatype='real' name='Official development assistance 2015–2023 (R) (Inflow in millions US$)' ordinal='9' />
              <column datatype='real' name='Official development assistance 2015–2023 (R) (Inflow as a % of recipient GNI)' ordinal='10' />
              <column datatype='real' name='Official development assistance 2015–2023 (R) (Outflow in millions US$)' ordinal='11' />
              <column datatype='real' name='Official development assistance 2015–2023 (R) (Ouflow as a % of donor GNI)' ordinal='12' />
            </columns>
          </relation>
          <relation connection='excel-direct.0m7pspr006ztfp1795kac08y22df' name='Migration Summary' table='[&apos;Migration Summary$&apos;]' type='table'>
            <columns gridOrigin='A1:R14:no:A1:R14:0' header='yes' outcome='2'>
              <column datatype='string' name='Countries and areas' ordinal='0' />
              <column datatype='integer' name='International migrant stock 2020 (Total (thousands))' ordinal='1' />
              <column datatype='integer' name='International migrant stock 2020 (Under 18 (thousands))' ordinal='2' />
              <column datatype='integer' name='International migrant stock 2020 (Total as share of national population (%))' ordinal='3' />
              <column datatype='integer' name='Refugees by asylum country 2023 (Total)' ordinal='4' />
              <column datatype='integer' name='Refugees by asylum country 2023 (Under 18)' ordinal='5' />
              <column datatype='integer' name='Refugees by asylum country  2023 (Per 1,000 population)' ordinal='6' />
              <column datatype='integer' name='Refugees by asylum country 2023 (Per 1 US$ GNI per capita)' ordinal='7' />
              <column datatype='integer' name='Refugees by origin country 2023 (Total)' ordinal='8' />
              <column datatype='integer' name='Refugees by origin country 2023 (Under 18)' ordinal='9' />
              <column datatype='integer' name='Internally displaced persons (IDPs) 2023 (Total (T))' ordinal='10' />
              <column datatype='integer' name='Internally displaced persons (IDPs) 2023 (Under 18 (Ru))' ordinal='11' />
              <column datatype='integer' name='Internally displaced persons (IDPs) 2023 (Share due to conflict and violence (%) (Sd))' ordinal='12' />
              <column datatype='integer' name='Internally displaced persons (IDPs) 2023 (Share due to disaster (%) (Sd))' ordinal='13' />
              <column datatype='integer' name='New internal displacements 2023 (Total (T))' ordinal='14' />
              <column datatype='integer' name='New internal displacements 2023 (Under 18 (Ru))' ordinal='15' />
              <column datatype='integer' name='New internal displacements 2023 (Share due to conflict and violence (%) (Sd))' ordinal='16' />
              <column datatype='integer' name='New internal displacements 2023 (Share due to disaster (%) (Sd))' ordinal='17' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Countries and areas (Economic Indicators Summary)]' value='[Economic Indicators Summary].[Countries and areas]' />
          <map key='[Countries and areas (Economic Indicators)]' value='[Economic Indicators].[Countries and areas]' />
          <map key='[Countries and areas (Migration Summary)]' value='[Migration Summary].[Countries and areas]' />
          <map key='[Countries and areas]' value='[Migration].[Countries and areas]' />
          <map key='[Government Expenditure 2015–2023 (R)  (As % of GDP) (On education) (Economic Indicators Summary)]' value='[Economic Indicators Summary].[Government Expenditure 2015–2023 (R)  (As % of GDP) (On education)]' />
          <map key='[Government Expenditure 2015–2023 (R)  (As % of GDP) (On education)]' value='[Economic Indicators].[Government Expenditure 2015–2023 (R)  (As % of GDP) (On education)]' />
          <map key='[Government Expenditure 2015–2023 (R)  (As % of GDP) (On health) (Economic Indicators Summary)]' value='[Economic Indicators Summary].[Government Expenditure 2015–2023 (R)  (As % of GDP) (On health)]' />
          <map key='[Government Expenditure 2015–2023 (R)  (As % of GDP) (On health)]' value='[Economic Indicators].[Government Expenditure 2015–2023 (R)  (As % of GDP) (On health)]' />
          <map key='[Government Expenditure 2015–2023 (R)  (As % of GDP) (On social protection) (Economic Indicators Summary)]' value='[Economic Indicators Summary].[Government Expenditure 2015–2023 (R)  (As % of GDP) (On social protection)]' />
          <map key='[Government Expenditure 2015–2023 (R)  (As % of GDP) (On social protection)]' value='[Economic Indicators].[Government Expenditure 2015–2023 (R)  (As % of GDP) (On social protection)]' />
          <map key='[Government Expenditure 2015–2023 (R)  (As % of GDP) (Total) (Economic Indicators Summary)]' value='[Economic Indicators Summary].[Government Expenditure 2015–2023 (R)  (As % of GDP) (Total)]' />
          <map key='[Government Expenditure 2015–2023 (R)  (As % of GDP) (Total)]' value='[Economic Indicators].[Government Expenditure 2015–2023 (R)  (As % of GDP) (Total)]' />
          <map key='[Government Expenditure 2015–2023 (R)  (As % of government budget) (On education) (Economic Indicators Summary)]' value='[Economic Indicators Summary].[Government Expenditure 2015–2023 (R)  (As % of government budget) (On education)]' />
          <map key='[Government Expenditure 2015–2023 (R)  (As % of government budget) (On education)]' value='[Economic Indicators].[Government Expenditure 2015–2023 (R)  (As % of government budget) (On education)]' />
          <map key='[Government Expenditure 2015–2023 (R)  (As % of government budget) (On health) (Economic Indicators Summary)]' value='[Economic Indicators Summary].[Government Expenditure 2015–2023 (R)  (As % of government budget) (On health)]' />
          <map key='[Government Expenditure 2015–2023 (R)  (As % of government budget) (On health)]' value='[Economic Indicators].[Government Expenditure 2015–2023 (R)  (As % of government budget) (On health)]' />
          <map key='[Government Expenditure 2015–2023 (R)  (As % of government budget) (On social protection) (Economic Indicators Summary)]' value='[Economic Indicators Summary].[Government Expenditure 2015–2023 (R)  (As % of government budget) (On social protection)]' />
          <map key='[Government Expenditure 2015–2023 (R)  (As % of government budget) (On social protection)]' value='[Economic Indicators].[Government Expenditure 2015–2023 (R)  (As % of government budget) (On social protection)]' />
          <map key='[Government revenue as % of GDP 2015–2023 ® (Economic Indicators Summary)]' value='[Economic Indicators Summary].[Government revenue as % of GDP 2015–2023 ®]' />
          <map key='[Government revenue as % of GDP 2015–2023 ®]' value='[Economic Indicators].[Government revenue as % of GDP 2015–2023 ®]' />
          <map key='[Internally displaced persons (IDPs) 2023 (Share due to conflict and violence (%) (Sd)) (Migration Summary)]' value='[Migration Summary].[Internally displaced persons (IDPs) 2023 (Share due to conflict and violence (%) (Sd))]' />
          <map key='[Internally displaced persons (IDPs) 2023 (Share due to conflict and violence (%) (Sd))]' value='[Migration].[Internally displaced persons (IDPs) 2023 (Share due to conflict and violence (%) (Sd))]' />
          <map key='[Internally displaced persons (IDPs) 2023 (Share due to disaster (%) (Sd)) (Migration Summary)]' value='[Migration Summary].[Internally displaced persons (IDPs) 2023 (Share due to disaster (%) (Sd))]' />
          <map key='[Internally displaced persons (IDPs) 2023 (Share due to disaster (%) (Sd))]' value='[Migration].[Internally displaced persons (IDPs) 2023 (Share due to disaster (%) (Sd))]' />
          <map key='[Internally displaced persons (IDPs) 2023 (Total (T)) (Migration Summary)]' value='[Migration Summary].[Internally displaced persons (IDPs) 2023 (Total (T))]' />
          <map key='[Internally displaced persons (IDPs) 2023 (Total (T))]' value='[Migration].[Internally displaced persons (IDPs) 2023 (Total (T))]' />
          <map key='[Internally displaced persons (IDPs) 2023 (Under 18 (Ru)) (Migration Summary)]' value='[Migration Summary].[Internally displaced persons (IDPs) 2023 (Under 18 (Ru))]' />
          <map key='[Internally displaced persons (IDPs) 2023 (Under 18 (Ru))]' value='[Migration].[Internally displaced persons (IDPs) 2023 (Under 18 (Ru))]' />
          <map key='[International migrant stock 2020 (Total (thousands)) (Migration Summary)]' value='[Migration Summary].[International migrant stock 2020 (Total (thousands))]' />
          <map key='[International migrant stock 2020 (Total (thousands))]' value='[Migration].[International migrant stock 2020 (Total (thousands))]' />
          <map key='[International migrant stock 2020 (Total as share of national population (%)) (Migration Summary)]' value='[Migration Summary].[International migrant stock 2020 (Total as share of national population (%))]' />
          <map key='[International migrant stock 2020 (Total as share of national population (%))]' value='[Migration].[International migrant stock 2020 (Total as share of national population (%))]' />
          <map key='[International migrant stock 2020 (Under 18 (thousands)) (Migration Summary)]' value='[Migration Summary].[International migrant stock 2020 (Under 18 (thousands))]' />
          <map key='[International migrant stock 2020 (Under 18 (thousands))]' value='[Migration].[International migrant stock 2020 (Under 18 (thousands))]' />
          <map key='[New internal displacements 2023 (Share due to conflict and violence (%) (Sd)) (Migration Summary)]' value='[Migration Summary].[New internal displacements 2023 (Share due to conflict and violence (%) (Sd))]' />
          <map key='[New internal displacements 2023 (Share due to conflict and violence (%) (Sd))]' value='[Migration].[New internal displacements 2023 (Share due to conflict and violence (%) (Sd))]' />
          <map key='[New internal displacements 2023 (Share due to disaster (%) (Sd)) (Migration Summary)]' value='[Migration Summary].[New internal displacements 2023 (Share due to disaster (%) (Sd))]' />
          <map key='[New internal displacements 2023 (Share due to disaster (%) (Sd))]' value='[Migration].[New internal displacements 2023 (Share due to disaster (%) (Sd))]' />
          <map key='[New internal displacements 2023 (Total (T)) (Migration Summary)]' value='[Migration Summary].[New internal displacements 2023 (Total (T))]' />
          <map key='[New internal displacements 2023 (Total (T))]' value='[Migration].[New internal displacements 2023 (Total (T))]' />
          <map key='[New internal displacements 2023 (Under 18 (Ru)) (Migration Summary)]' value='[Migration Summary].[New internal displacements 2023 (Under 18 (Ru))]' />
          <map key='[New internal displacements 2023 (Under 18 (Ru))]' value='[Migration].[New internal displacements 2023 (Under 18 (Ru))]' />
          <map key='[Official development assistance 2015–2023 (R) (Inflow as a % of recipient GNI) (Economic Indicators Summary)]' value='[Economic Indicators Summary].[Official development assistance 2015–2023 (R) (Inflow as a % of recipient GNI)]' />
          <map key='[Official development assistance 2015–2023 (R) (Inflow as a % of recipient GNI)]' value='[Economic Indicators].[Official development assistance 2015–2023 (R) (Inflow as a % of recipient GNI)]' />
          <map key='[Official development assistance 2015–2023 (R) (Inflow in millions US$) (Economic Indicators Summary)]' value='[Economic Indicators Summary].[Official development assistance 2015–2023 (R) (Inflow in millions US$)]' />
          <map key='[Official development assistance 2015–2023 (R) (Inflow in millions US$)]' value='[Economic Indicators].[Official development assistance 2015–2023 (R) (Inflow in millions US$)]' />
          <map key='[Official development assistance 2015–2023 (R) (Ouflow as a % of donor GNI) (Economic Indicators Summary)]' value='[Economic Indicators Summary].[Official development assistance 2015–2023 (R) (Ouflow as a % of donor GNI)]' />
          <map key='[Official development assistance 2015–2023 (R) (Ouflow as a % of donor GNI)]' value='[Economic Indicators].[Official development assistance 2015–2023 (R) (Ouflow as a % of donor GNI)]' />
          <map key='[Official development assistance 2015–2023 (R) (Outflow in millions US$) (Economic Indicators Summary)]' value='[Economic Indicators Summary].[Official development assistance 2015–2023 (R) (Outflow in millions US$)]' />
          <map key='[Official development assistance 2015–2023 (R) (Outflow in millions US$)]' value='[Economic Indicators].[Official development assistance 2015–2023 (R) (Outflow in millions US$)]' />
          <map key='[Refugees by asylum country  2023 (Per 1,000 population) (Migration Summary)]' value='[Migration Summary].[Refugees by asylum country  2023 (Per 1,000 population)]' />
          <map key='[Refugees by asylum country  2023 (Per 1,000 population)]' value='[Migration].[Refugees by asylum country  2023 (Per 1,000 population)]' />
          <map key='[Refugees by asylum country 2023 (Per 1 US$ GNI per capita) (Migration Summary)]' value='[Migration Summary].[Refugees by asylum country 2023 (Per 1 US$ GNI per capita)]' />
          <map key='[Refugees by asylum country 2023 (Per 1 US$ GNI per capita)]' value='[Migration].[Refugees by asylum country 2023 (Per 1 US$ GNI per capita)]' />
          <map key='[Refugees by asylum country 2023 (Total) (Migration Summary)]' value='[Migration Summary].[Refugees by asylum country 2023 (Total)]' />
          <map key='[Refugees by asylum country 2023 (Total)]' value='[Migration].[Refugees by asylum country 2023 (Total)]' />
          <map key='[Refugees by asylum country 2023 (Under 18) (Migration Summary)]' value='[Migration Summary].[Refugees by asylum country 2023 (Under 18)]' />
          <map key='[Refugees by asylum country 2023 (Under 18)]' value='[Migration].[Refugees by asylum country 2023 (Under 18)]' />
          <map key='[Refugees by origin country 2023 (Total) (Migration Summary)]' value='[Migration Summary].[Refugees by origin country 2023 (Total)]' />
          <map key='[Refugees by origin country 2023 (Total)]' value='[Migration].[Refugees by origin country 2023 (Total)]' />
          <map key='[Refugees by origin country 2023 (Under 18) (Migration Summary)]' value='[Migration Summary].[Refugees by origin country 2023 (Under 18)]' />
          <map key='[Refugees by origin country 2023 (Under 18)]' value='[Migration].[Refugees by origin country 2023 (Under 18)]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Migration]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:R203:no:A1:R203:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Economic Indicators Summary]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M14:no:A1:M14:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Economic Indicators]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M203:no:A1:M203:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Migration Summary]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:R14:no:A1:R14:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Countries and areas</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Countries and areas]</local-name>
            <parent-name>[Migration]</parent-name>
            <remote-alias>Countries and areas</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration_35D1559EEC7240D3B816C9B3A6238A1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International migrant stock 2020 (Total (thousands))</remote-name>
            <remote-type>20</remote-type>
            <local-name>[International migrant stock 2020 (Total (thousands))]</local-name>
            <parent-name>[Migration]</parent-name>
            <remote-alias>International migrant stock 2020 (Total (thousands))</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration_35D1559EEC7240D3B816C9B3A6238A1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International migrant stock 2020 (Under 18 (thousands))</remote-name>
            <remote-type>20</remote-type>
            <local-name>[International migrant stock 2020 (Under 18 (thousands))]</local-name>
            <parent-name>[Migration]</parent-name>
            <remote-alias>International migrant stock 2020 (Under 18 (thousands))</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration_35D1559EEC7240D3B816C9B3A6238A1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International migrant stock 2020 (Total as share of national population (%))</remote-name>
            <remote-type>20</remote-type>
            <local-name>[International migrant stock 2020 (Total as share of national population (%))]</local-name>
            <parent-name>[Migration]</parent-name>
            <remote-alias>International migrant stock 2020 (Total as share of national population (%))</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration_35D1559EEC7240D3B816C9B3A6238A1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Refugees by asylum country 2023 (Total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Refugees by asylum country 2023 (Total)]</local-name>
            <parent-name>[Migration]</parent-name>
            <remote-alias>Refugees by asylum country 2023 (Total)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration_35D1559EEC7240D3B816C9B3A6238A1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Refugees by asylum country 2023 (Under 18)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Refugees by asylum country 2023 (Under 18)]</local-name>
            <parent-name>[Migration]</parent-name>
            <remote-alias>Refugees by asylum country 2023 (Under 18)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration_35D1559EEC7240D3B816C9B3A6238A1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Refugees by asylum country  2023 (Per 1,000 population)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Refugees by asylum country  2023 (Per 1,000 population)]</local-name>
            <parent-name>[Migration]</parent-name>
            <remote-alias>Refugees by asylum country  2023 (Per 1,000 population)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration_35D1559EEC7240D3B816C9B3A6238A1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Refugees by asylum country 2023 (Per 1 US$ GNI per capita)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Refugees by asylum country 2023 (Per 1 US$ GNI per capita)]</local-name>
            <parent-name>[Migration]</parent-name>
            <remote-alias>Refugees by asylum country 2023 (Per 1 US$ GNI per capita)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration_35D1559EEC7240D3B816C9B3A6238A1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Refugees by origin country 2023 (Total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Refugees by origin country 2023 (Total)]</local-name>
            <parent-name>[Migration]</parent-name>
            <remote-alias>Refugees by origin country 2023 (Total)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration_35D1559EEC7240D3B816C9B3A6238A1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Refugees by origin country 2023 (Under 18)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Refugees by origin country 2023 (Under 18)]</local-name>
            <parent-name>[Migration]</parent-name>
            <remote-alias>Refugees by origin country 2023 (Under 18)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration_35D1559EEC7240D3B816C9B3A6238A1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Internally displaced persons (IDPs) 2023 (Total (T))</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Internally displaced persons (IDPs) 2023 (Total (T))]</local-name>
            <parent-name>[Migration]</parent-name>
            <remote-alias>Internally displaced persons (IDPs) 2023 (Total (T))</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration_35D1559EEC7240D3B816C9B3A6238A1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Internally displaced persons (IDPs) 2023 (Under 18 (Ru))</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Internally displaced persons (IDPs) 2023 (Under 18 (Ru))]</local-name>
            <parent-name>[Migration]</parent-name>
            <remote-alias>Internally displaced persons (IDPs) 2023 (Under 18 (Ru))</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration_35D1559EEC7240D3B816C9B3A6238A1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Internally displaced persons (IDPs) 2023 (Share due to conflict and violence (%) (Sd))</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Internally displaced persons (IDPs) 2023 (Share due to conflict and violence (%) (Sd))]</local-name>
            <parent-name>[Migration]</parent-name>
            <remote-alias>Internally displaced persons (IDPs) 2023 (Share due to conflict and violence (%) (Sd))</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration_35D1559EEC7240D3B816C9B3A6238A1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Internally displaced persons (IDPs) 2023 (Share due to disaster (%) (Sd))</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Internally displaced persons (IDPs) 2023 (Share due to disaster (%) (Sd))]</local-name>
            <parent-name>[Migration]</parent-name>
            <remote-alias>Internally displaced persons (IDPs) 2023 (Share due to disaster (%) (Sd))</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration_35D1559EEC7240D3B816C9B3A6238A1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New internal displacements 2023 (Total (T))</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New internal displacements 2023 (Total (T))]</local-name>
            <parent-name>[Migration]</parent-name>
            <remote-alias>New internal displacements 2023 (Total (T))</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration_35D1559EEC7240D3B816C9B3A6238A1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New internal displacements 2023 (Under 18 (Ru))</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New internal displacements 2023 (Under 18 (Ru))]</local-name>
            <parent-name>[Migration]</parent-name>
            <remote-alias>New internal displacements 2023 (Under 18 (Ru))</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration_35D1559EEC7240D3B816C9B3A6238A1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New internal displacements 2023 (Share due to conflict and violence (%) (Sd))</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New internal displacements 2023 (Share due to conflict and violence (%) (Sd))]</local-name>
            <parent-name>[Migration]</parent-name>
            <remote-alias>New internal displacements 2023 (Share due to conflict and violence (%) (Sd))</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration_35D1559EEC7240D3B816C9B3A6238A1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New internal displacements 2023 (Share due to disaster (%) (Sd))</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New internal displacements 2023 (Share due to disaster (%) (Sd))]</local-name>
            <parent-name>[Migration]</parent-name>
            <remote-alias>New internal displacements 2023 (Share due to disaster (%) (Sd))</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration_35D1559EEC7240D3B816C9B3A6238A1E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Countries and areas</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Countries and areas (Economic Indicators Summary)]</local-name>
            <parent-name>[Economic Indicators Summary]</parent-name>
            <remote-alias>Countries and areas</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Economic Indicators Summary_ACE004195936494D90F3E49BEE193FB0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government revenue as % of GDP 2015–2023 ®</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Government revenue as % of GDP 2015–2023 ® (Economic Indicators Summary)]</local-name>
            <parent-name>[Economic Indicators Summary]</parent-name>
            <remote-alias>Government revenue as % of GDP 2015–2023 ®</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Economic Indicators Summary_ACE004195936494D90F3E49BEE193FB0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government Expenditure 2015–2023 (R)  (As % of GDP) (Total)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Government Expenditure 2015–2023 (R)  (As % of GDP) (Total) (Economic Indicators Summary)]</local-name>
            <parent-name>[Economic Indicators Summary]</parent-name>
            <remote-alias>Government Expenditure 2015–2023 (R)  (As % of GDP) (Total)</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Economic Indicators Summary_ACE004195936494D90F3E49BEE193FB0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government Expenditure 2015–2023 (R)  (As % of GDP) (On health)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Government Expenditure 2015–2023 (R)  (As % of GDP) (On health) (Economic Indicators Summary)]</local-name>
            <parent-name>[Economic Indicators Summary]</parent-name>
            <remote-alias>Government Expenditure 2015–2023 (R)  (As % of GDP) (On health)</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Economic Indicators Summary_ACE004195936494D90F3E49BEE193FB0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government Expenditure 2015–2023 (R)  (As % of GDP) (On education)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Government Expenditure 2015–2023 (R)  (As % of GDP) (On education) (Economic Indicators Summary)]</local-name>
            <parent-name>[Economic Indicators Summary]</parent-name>
            <remote-alias>Government Expenditure 2015–2023 (R)  (As % of GDP) (On education)</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Economic Indicators Summary_ACE004195936494D90F3E49BEE193FB0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government Expenditure 2015–2023 (R)  (As % of GDP) (On social protection)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Government Expenditure 2015–2023 (R)  (As % of GDP) (On social protection) (Economic Indicators Summary)]</local-name>
            <parent-name>[Economic Indicators Summary]</parent-name>
            <remote-alias>Government Expenditure 2015–2023 (R)  (As % of GDP) (On social protection)</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Economic Indicators Summary_ACE004195936494D90F3E49BEE193FB0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government Expenditure 2015–2023 (R)  (As % of government budget) (On health)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Government Expenditure 2015–2023 (R)  (As % of government budget) (On health) (Economic Indicators Summary)]</local-name>
            <parent-name>[Economic Indicators Summary]</parent-name>
            <remote-alias>Government Expenditure 2015–2023 (R)  (As % of government budget) (On health)</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Economic Indicators Summary_ACE004195936494D90F3E49BEE193FB0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government Expenditure 2015–2023 (R)  (As % of government budget) (On education)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Government Expenditure 2015–2023 (R)  (As % of government budget) (On education) (Economic Indicators Summary)]</local-name>
            <parent-name>[Economic Indicators Summary]</parent-name>
            <remote-alias>Government Expenditure 2015–2023 (R)  (As % of government budget) (On education)</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Economic Indicators Summary_ACE004195936494D90F3E49BEE193FB0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government Expenditure 2015–2023 (R)  (As % of government budget) (On social protection)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Government Expenditure 2015–2023 (R)  (As % of government budget) (On social protection) (Economic Indicators Summary)]</local-name>
            <parent-name>[Economic Indicators Summary]</parent-name>
            <remote-alias>Government Expenditure 2015–2023 (R)  (As % of government budget) (On social protection)</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Economic Indicators Summary_ACE004195936494D90F3E49BEE193FB0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Official development assistance 2015–2023 (R) (Inflow in millions US$)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Official development assistance 2015–2023 (R) (Inflow in millions US$) (Economic Indicators Summary)]</local-name>
            <parent-name>[Economic Indicators Summary]</parent-name>
            <remote-alias>Official development assistance 2015–2023 (R) (Inflow in millions US$)</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Economic Indicators Summary_ACE004195936494D90F3E49BEE193FB0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Official development assistance 2015–2023 (R) (Inflow as a % of recipient GNI)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Official development assistance 2015–2023 (R) (Inflow as a % of recipient GNI) (Economic Indicators Summary)]</local-name>
            <parent-name>[Economic Indicators Summary]</parent-name>
            <remote-alias>Official development assistance 2015–2023 (R) (Inflow as a % of recipient GNI)</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Economic Indicators Summary_ACE004195936494D90F3E49BEE193FB0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Official development assistance 2015–2023 (R) (Outflow in millions US$)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Official development assistance 2015–2023 (R) (Outflow in millions US$) (Economic Indicators Summary)]</local-name>
            <parent-name>[Economic Indicators Summary]</parent-name>
            <remote-alias>Official development assistance 2015–2023 (R) (Outflow in millions US$)</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Economic Indicators Summary_ACE004195936494D90F3E49BEE193FB0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Official development assistance 2015–2023 (R) (Ouflow as a % of donor GNI)</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Official development assistance 2015–2023 (R) (Ouflow as a % of donor GNI) (Economic Indicators Summary)]</local-name>
            <parent-name>[Economic Indicators Summary]</parent-name>
            <remote-alias>Official development assistance 2015–2023 (R) (Ouflow as a % of donor GNI)</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Economic Indicators Summary_ACE004195936494D90F3E49BEE193FB0]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Countries and areas</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Countries and areas (Economic Indicators)]</local-name>
            <parent-name>[Economic Indicators]</parent-name>
            <remote-alias>Countries and areas</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Economic Indicators_DA1465D1C3B542E0BFD877B0B98BC0B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government revenue as % of GDP 2015–2023 ®</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Government revenue as % of GDP 2015–2023 ®]</local-name>
            <parent-name>[Economic Indicators]</parent-name>
            <remote-alias>Government revenue as % of GDP 2015–2023 ®</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Economic Indicators_DA1465D1C3B542E0BFD877B0B98BC0B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government Expenditure 2015–2023 (R)  (As % of GDP) (Total)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Government Expenditure 2015–2023 (R)  (As % of GDP) (Total)]</local-name>
            <parent-name>[Economic Indicators]</parent-name>
            <remote-alias>Government Expenditure 2015–2023 (R)  (As % of GDP) (Total)</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Economic Indicators_DA1465D1C3B542E0BFD877B0B98BC0B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government Expenditure 2015–2023 (R)  (As % of GDP) (On health)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Government Expenditure 2015–2023 (R)  (As % of GDP) (On health)]</local-name>
            <parent-name>[Economic Indicators]</parent-name>
            <remote-alias>Government Expenditure 2015–2023 (R)  (As % of GDP) (On health)</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Economic Indicators_DA1465D1C3B542E0BFD877B0B98BC0B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government Expenditure 2015–2023 (R)  (As % of GDP) (On education)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Government Expenditure 2015–2023 (R)  (As % of GDP) (On education)]</local-name>
            <parent-name>[Economic Indicators]</parent-name>
            <remote-alias>Government Expenditure 2015–2023 (R)  (As % of GDP) (On education)</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Economic Indicators_DA1465D1C3B542E0BFD877B0B98BC0B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government Expenditure 2015–2023 (R)  (As % of GDP) (On social protection)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Government Expenditure 2015–2023 (R)  (As % of GDP) (On social protection)]</local-name>
            <parent-name>[Economic Indicators]</parent-name>
            <remote-alias>Government Expenditure 2015–2023 (R)  (As % of GDP) (On social protection)</remote-alias>
            <ordinal>36</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Economic Indicators_DA1465D1C3B542E0BFD877B0B98BC0B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government Expenditure 2015–2023 (R)  (As % of government budget) (On health)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Government Expenditure 2015–2023 (R)  (As % of government budget) (On health)]</local-name>
            <parent-name>[Economic Indicators]</parent-name>
            <remote-alias>Government Expenditure 2015–2023 (R)  (As % of government budget) (On health)</remote-alias>
            <ordinal>37</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Economic Indicators_DA1465D1C3B542E0BFD877B0B98BC0B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government Expenditure 2015–2023 (R)  (As % of government budget) (On education)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Government Expenditure 2015–2023 (R)  (As % of government budget) (On education)]</local-name>
            <parent-name>[Economic Indicators]</parent-name>
            <remote-alias>Government Expenditure 2015–2023 (R)  (As % of government budget) (On education)</remote-alias>
            <ordinal>38</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Economic Indicators_DA1465D1C3B542E0BFD877B0B98BC0B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Government Expenditure 2015–2023 (R)  (As % of government budget) (On social protection)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Government Expenditure 2015–2023 (R)  (As % of government budget) (On social protection)]</local-name>
            <parent-name>[Economic Indicators]</parent-name>
            <remote-alias>Government Expenditure 2015–2023 (R)  (As % of government budget) (On social protection)</remote-alias>
            <ordinal>39</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Economic Indicators_DA1465D1C3B542E0BFD877B0B98BC0B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Official development assistance 2015–2023 (R) (Inflow in millions US$)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Official development assistance 2015–2023 (R) (Inflow in millions US$)]</local-name>
            <parent-name>[Economic Indicators]</parent-name>
            <remote-alias>Official development assistance 2015–2023 (R) (Inflow in millions US$)</remote-alias>
            <ordinal>40</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Economic Indicators_DA1465D1C3B542E0BFD877B0B98BC0B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Official development assistance 2015–2023 (R) (Inflow as a % of recipient GNI)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Official development assistance 2015–2023 (R) (Inflow as a % of recipient GNI)]</local-name>
            <parent-name>[Economic Indicators]</parent-name>
            <remote-alias>Official development assistance 2015–2023 (R) (Inflow as a % of recipient GNI)</remote-alias>
            <ordinal>41</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Economic Indicators_DA1465D1C3B542E0BFD877B0B98BC0B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Official development assistance 2015–2023 (R) (Outflow in millions US$)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Official development assistance 2015–2023 (R) (Outflow in millions US$)]</local-name>
            <parent-name>[Economic Indicators]</parent-name>
            <remote-alias>Official development assistance 2015–2023 (R) (Outflow in millions US$)</remote-alias>
            <ordinal>42</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Economic Indicators_DA1465D1C3B542E0BFD877B0B98BC0B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Official development assistance 2015–2023 (R) (Ouflow as a % of donor GNI)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Official development assistance 2015–2023 (R) (Ouflow as a % of donor GNI)]</local-name>
            <parent-name>[Economic Indicators]</parent-name>
            <remote-alias>Official development assistance 2015–2023 (R) (Ouflow as a % of donor GNI)</remote-alias>
            <ordinal>43</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Economic Indicators_DA1465D1C3B542E0BFD877B0B98BC0B4]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Countries and areas</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Countries and areas (Migration Summary)]</local-name>
            <parent-name>[Migration Summary]</parent-name>
            <remote-alias>Countries and areas</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration Summary_043523A671D3429EA7EC8BB0E3372573]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International migrant stock 2020 (Total (thousands))</remote-name>
            <remote-type>20</remote-type>
            <local-name>[International migrant stock 2020 (Total (thousands)) (Migration Summary)]</local-name>
            <parent-name>[Migration Summary]</parent-name>
            <remote-alias>International migrant stock 2020 (Total (thousands))</remote-alias>
            <ordinal>45</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration Summary_043523A671D3429EA7EC8BB0E3372573]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International migrant stock 2020 (Under 18 (thousands))</remote-name>
            <remote-type>20</remote-type>
            <local-name>[International migrant stock 2020 (Under 18 (thousands)) (Migration Summary)]</local-name>
            <parent-name>[Migration Summary]</parent-name>
            <remote-alias>International migrant stock 2020 (Under 18 (thousands))</remote-alias>
            <ordinal>46</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration Summary_043523A671D3429EA7EC8BB0E3372573]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>International migrant stock 2020 (Total as share of national population (%))</remote-name>
            <remote-type>20</remote-type>
            <local-name>[International migrant stock 2020 (Total as share of national population (%)) (Migration Summary)]</local-name>
            <parent-name>[Migration Summary]</parent-name>
            <remote-alias>International migrant stock 2020 (Total as share of national population (%))</remote-alias>
            <ordinal>47</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration Summary_043523A671D3429EA7EC8BB0E3372573]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Refugees by asylum country 2023 (Total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Refugees by asylum country 2023 (Total) (Migration Summary)]</local-name>
            <parent-name>[Migration Summary]</parent-name>
            <remote-alias>Refugees by asylum country 2023 (Total)</remote-alias>
            <ordinal>48</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration Summary_043523A671D3429EA7EC8BB0E3372573]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Refugees by asylum country 2023 (Under 18)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Refugees by asylum country 2023 (Under 18) (Migration Summary)]</local-name>
            <parent-name>[Migration Summary]</parent-name>
            <remote-alias>Refugees by asylum country 2023 (Under 18)</remote-alias>
            <ordinal>49</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration Summary_043523A671D3429EA7EC8BB0E3372573]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Refugees by asylum country  2023 (Per 1,000 population)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Refugees by asylum country  2023 (Per 1,000 population) (Migration Summary)]</local-name>
            <parent-name>[Migration Summary]</parent-name>
            <remote-alias>Refugees by asylum country  2023 (Per 1,000 population)</remote-alias>
            <ordinal>50</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration Summary_043523A671D3429EA7EC8BB0E3372573]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Refugees by asylum country 2023 (Per 1 US$ GNI per capita)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Refugees by asylum country 2023 (Per 1 US$ GNI per capita) (Migration Summary)]</local-name>
            <parent-name>[Migration Summary]</parent-name>
            <remote-alias>Refugees by asylum country 2023 (Per 1 US$ GNI per capita)</remote-alias>
            <ordinal>51</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration Summary_043523A671D3429EA7EC8BB0E3372573]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Refugees by origin country 2023 (Total)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Refugees by origin country 2023 (Total) (Migration Summary)]</local-name>
            <parent-name>[Migration Summary]</parent-name>
            <remote-alias>Refugees by origin country 2023 (Total)</remote-alias>
            <ordinal>52</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration Summary_043523A671D3429EA7EC8BB0E3372573]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Refugees by origin country 2023 (Under 18)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Refugees by origin country 2023 (Under 18) (Migration Summary)]</local-name>
            <parent-name>[Migration Summary]</parent-name>
            <remote-alias>Refugees by origin country 2023 (Under 18)</remote-alias>
            <ordinal>53</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration Summary_043523A671D3429EA7EC8BB0E3372573]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Internally displaced persons (IDPs) 2023 (Total (T))</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Internally displaced persons (IDPs) 2023 (Total (T)) (Migration Summary)]</local-name>
            <parent-name>[Migration Summary]</parent-name>
            <remote-alias>Internally displaced persons (IDPs) 2023 (Total (T))</remote-alias>
            <ordinal>54</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration Summary_043523A671D3429EA7EC8BB0E3372573]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Internally displaced persons (IDPs) 2023 (Under 18 (Ru))</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Internally displaced persons (IDPs) 2023 (Under 18 (Ru)) (Migration Summary)]</local-name>
            <parent-name>[Migration Summary]</parent-name>
            <remote-alias>Internally displaced persons (IDPs) 2023 (Under 18 (Ru))</remote-alias>
            <ordinal>55</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration Summary_043523A671D3429EA7EC8BB0E3372573]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Internally displaced persons (IDPs) 2023 (Share due to conflict and violence (%) (Sd))</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Internally displaced persons (IDPs) 2023 (Share due to conflict and violence (%) (Sd)) (Migration Summary)]</local-name>
            <parent-name>[Migration Summary]</parent-name>
            <remote-alias>Internally displaced persons (IDPs) 2023 (Share due to conflict and violence (%) (Sd))</remote-alias>
            <ordinal>56</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration Summary_043523A671D3429EA7EC8BB0E3372573]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Internally displaced persons (IDPs) 2023 (Share due to disaster (%) (Sd))</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Internally displaced persons (IDPs) 2023 (Share due to disaster (%) (Sd)) (Migration Summary)]</local-name>
            <parent-name>[Migration Summary]</parent-name>
            <remote-alias>Internally displaced persons (IDPs) 2023 (Share due to disaster (%) (Sd))</remote-alias>
            <ordinal>57</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration Summary_043523A671D3429EA7EC8BB0E3372573]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New internal displacements 2023 (Total (T))</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New internal displacements 2023 (Total (T)) (Migration Summary)]</local-name>
            <parent-name>[Migration Summary]</parent-name>
            <remote-alias>New internal displacements 2023 (Total (T))</remote-alias>
            <ordinal>58</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration Summary_043523A671D3429EA7EC8BB0E3372573]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New internal displacements 2023 (Under 18 (Ru))</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New internal displacements 2023 (Under 18 (Ru)) (Migration Summary)]</local-name>
            <parent-name>[Migration Summary]</parent-name>
            <remote-alias>New internal displacements 2023 (Under 18 (Ru))</remote-alias>
            <ordinal>59</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration Summary_043523A671D3429EA7EC8BB0E3372573]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New internal displacements 2023 (Share due to conflict and violence (%) (Sd))</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New internal displacements 2023 (Share due to conflict and violence (%) (Sd)) (Migration Summary)]</local-name>
            <parent-name>[Migration Summary]</parent-name>
            <remote-alias>New internal displacements 2023 (Share due to conflict and violence (%) (Sd))</remote-alias>
            <ordinal>60</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration Summary_043523A671D3429EA7EC8BB0E3372573]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>New internal displacements 2023 (Share due to disaster (%) (Sd))</remote-name>
            <remote-type>20</remote-type>
            <local-name>[New internal displacements 2023 (Share due to disaster (%) (Sd)) (Migration Summary)]</local-name>
            <parent-name>[Migration Summary]</parent-name>
            <remote-alias>New internal displacements 2023 (Share due to disaster (%) (Sd))</remote-alias>
            <ordinal>61</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Migration Summary_043523A671D3429EA7EC8BB0E3372573]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Countries and areas (Economic Indicators Summary) (copy)' datatype='string' name='[Countries and areas (Economic Indicators Summary) (copy)_1240460251073613825]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='[Countries and areas (Economic Indicators Summary)]' />
      </column>
      <column caption='Countries and areas (Economic Indicators) (copy)' datatype='string' name='[Countries and areas (Economic Indicators) (copy)_1240460251073490944]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='[Countries and areas (Economic Indicators)]' />
      </column>
      <column caption='Countries and areas (Migration Summary) (copy)' datatype='string' name='[Countries and areas (Migration Summary) (copy)_1240460251073695746]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='[Countries and areas (Migration Summary)]' />
      </column>
      <column caption='Countries and areas (copy)' datatype='string' name='[Countries and areas (copy)_1240460251073781763]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='[Countries and areas]' />
      </column>
      <column datatype='real' name='[Government Expenditure 2015–2023 (R)  (As % of GDP) (On education)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Government Expenditure 2015–2023 (R)  (As % of GDP) (On health)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Government Expenditure 2015–2023 (R)  (As % of GDP) (Total)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Government revenue as % of GDP 2015–2023 ® (Economic Indicators Summary)]' role='measure' type='quantitative' />
      <column datatype='real' name='[Government revenue as % of GDP 2015–2023 ®]' role='measure' type='quantitative' />
      <column datatype='integer' name='[International migrant stock 2020 (Total as share of national population (%))]' role='measure' type='quantitative' />
      <column datatype='real' name='[Official development assistance 2015–2023 (R) (Inflow in millions US$)]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Refugees by asylum country 2023 (Total)]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Economic Indicators Summary' datatype='table' name='[__tableau_internal_object_id__].[Economic Indicators Summary_ACE004195936494D90F3E49BEE193FB0]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Economic Indicators' datatype='table' name='[__tableau_internal_object_id__].[Economic Indicators_DA1465D1C3B542E0BFD877B0B98BC0B4]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Migration Summary' datatype='table' name='[__tableau_internal_object_id__].[Migration Summary_043523A671D3429EA7EC8BB0E3372573]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Migration' datatype='table' name='[__tableau_internal_object_id__].[Migration_35D1559EEC7240D3B816C9B3A6238A1E]' role='measure' type='quantitative' />
      <column-instance column='[Government Expenditure 2015–2023 (R)  (As % of GDP) (On education)]' derivation='Sum' name='[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On education):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Government Expenditure 2015–2023 (R)  (As % of GDP) (On health)]' derivation='Sum' name='[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On health):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Government Expenditure 2015–2023 (R)  (As % of GDP) (Total)]' derivation='Sum' name='[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (Total):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Government revenue as % of GDP 2015–2023 ® (Economic Indicators Summary)]' derivation='Sum' name='[sum:Government revenue as % of GDP 2015–2023 ® (Economic Indicators Summary):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Government revenue as % of GDP 2015–2023 ®]' derivation='Sum' name='[sum:Government revenue as % of GDP 2015–2023 ®:qk]' pivot='key' type='quantitative' />
      <column-instance column='[International migrant stock 2020 (Total as share of national population (%))]' derivation='Sum' name='[sum:International migrant stock 2020 (Total as share of national population (%)):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Official development assistance 2015–2023 (R) (Inflow in millions US$)]' derivation='Sum' name='[sum:Official development assistance 2015–2023 (R) (Inflow in millions US$):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Refugees by asylum country 2023 (Total)]' derivation='Sum' name='[sum:Refugees by asylum country 2023 (Total):qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As \% of GDP) (Total):qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:International migrant stock 2020 (Total as share of national population (\%)):qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government revenue as \% of GDP 2015–2023 ® (Economic Indicators Summary):qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As \% of GDP) (On health):qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Refugees by asylum country 2023 (Total):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Official development assistance 2015–2023 (R) (Inflow in millions US$):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government revenue as \% of GDP 2015–2023 ®:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As \% of GDP) (On education):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Economic Indicators Summary' id='Economic Indicators Summary_ACE004195936494D90F3E49BEE193FB0'>
            <properties context=''>
              <relation connection='excel-direct.0m7pspr006ztfp1795kac08y22df' name='Economic Indicators Summary' table='[&apos;Economic Indicators Summary$&apos;]' type='table'>
                <columns gridOrigin='A1:M14:no:A1:M14:0' header='yes' outcome='2'>
                  <column datatype='string' name='Countries and areas' ordinal='0' />
                  <column datatype='real' name='Government revenue as % of GDP 2015–2023 ®' ordinal='1' />
                  <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of GDP) (Total)' ordinal='2' />
                  <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of GDP) (On health)' ordinal='3' />
                  <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of GDP) (On education)' ordinal='4' />
                  <column datatype='string' name='Government Expenditure 2015–2023 (R)  (As % of GDP) (On social protection)' ordinal='5' />
                  <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of government budget) (On health)' ordinal='6' />
                  <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of government budget) (On education)' ordinal='7' />
                  <column datatype='integer' name='Government Expenditure 2015–2023 (R)  (As % of government budget) (On social protection)' ordinal='8' />
                  <column datatype='real' name='Official development assistance 2015–2023 (R) (Inflow in millions US$)' ordinal='9' />
                  <column datatype='real' name='Official development assistance 2015–2023 (R) (Inflow as a % of recipient GNI)' ordinal='10' />
                  <column datatype='string' name='Official development assistance 2015–2023 (R) (Outflow in millions US$)' ordinal='11' />
                  <column datatype='string' name='Official development assistance 2015–2023 (R) (Ouflow as a % of donor GNI)' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Economic Indicators' id='Economic Indicators_DA1465D1C3B542E0BFD877B0B98BC0B4'>
            <properties context=''>
              <relation connection='excel-direct.0m7pspr006ztfp1795kac08y22df' name='Economic Indicators' table='[&apos;Economic Indicators$&apos;]' type='table'>
                <columns gridOrigin='A1:M203:no:A1:M203:0' header='yes' outcome='2'>
                  <column datatype='string' name='Countries and areas' ordinal='0' />
                  <column datatype='real' name='Government revenue as % of GDP 2015–2023 ®' ordinal='1' />
                  <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of GDP) (Total)' ordinal='2' />
                  <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of GDP) (On health)' ordinal='3' />
                  <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of GDP) (On education)' ordinal='4' />
                  <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of GDP) (On social protection)' ordinal='5' />
                  <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of government budget) (On health)' ordinal='6' />
                  <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of government budget) (On education)' ordinal='7' />
                  <column datatype='real' name='Government Expenditure 2015–2023 (R)  (As % of government budget) (On social protection)' ordinal='8' />
                  <column datatype='real' name='Official development assistance 2015–2023 (R) (Inflow in millions US$)' ordinal='9' />
                  <column datatype='real' name='Official development assistance 2015–2023 (R) (Inflow as a % of recipient GNI)' ordinal='10' />
                  <column datatype='real' name='Official development assistance 2015–2023 (R) (Outflow in millions US$)' ordinal='11' />
                  <column datatype='real' name='Official development assistance 2015–2023 (R) (Ouflow as a % of donor GNI)' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Migration Summary' id='Migration Summary_043523A671D3429EA7EC8BB0E3372573'>
            <properties context=''>
              <relation connection='excel-direct.0m7pspr006ztfp1795kac08y22df' name='Migration Summary' table='[&apos;Migration Summary$&apos;]' type='table'>
                <columns gridOrigin='A1:R14:no:A1:R14:0' header='yes' outcome='2'>
                  <column datatype='string' name='Countries and areas' ordinal='0' />
                  <column datatype='integer' name='International migrant stock 2020 (Total (thousands))' ordinal='1' />
                  <column datatype='integer' name='International migrant stock 2020 (Under 18 (thousands))' ordinal='2' />
                  <column datatype='integer' name='International migrant stock 2020 (Total as share of national population (%))' ordinal='3' />
                  <column datatype='integer' name='Refugees by asylum country 2023 (Total)' ordinal='4' />
                  <column datatype='integer' name='Refugees by asylum country 2023 (Under 18)' ordinal='5' />
                  <column datatype='integer' name='Refugees by asylum country  2023 (Per 1,000 population)' ordinal='6' />
                  <column datatype='integer' name='Refugees by asylum country 2023 (Per 1 US$ GNI per capita)' ordinal='7' />
                  <column datatype='integer' name='Refugees by origin country 2023 (Total)' ordinal='8' />
                  <column datatype='integer' name='Refugees by origin country 2023 (Under 18)' ordinal='9' />
                  <column datatype='integer' name='Internally displaced persons (IDPs) 2023 (Total (T))' ordinal='10' />
                  <column datatype='integer' name='Internally displaced persons (IDPs) 2023 (Under 18 (Ru))' ordinal='11' />
                  <column datatype='integer' name='Internally displaced persons (IDPs) 2023 (Share due to conflict and violence (%) (Sd))' ordinal='12' />
                  <column datatype='integer' name='Internally displaced persons (IDPs) 2023 (Share due to disaster (%) (Sd))' ordinal='13' />
                  <column datatype='integer' name='New internal displacements 2023 (Total (T))' ordinal='14' />
                  <column datatype='integer' name='New internal displacements 2023 (Under 18 (Ru))' ordinal='15' />
                  <column datatype='integer' name='New internal displacements 2023 (Share due to conflict and violence (%) (Sd))' ordinal='16' />
                  <column datatype='integer' name='New internal displacements 2023 (Share due to disaster (%) (Sd))' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Migration' id='Migration_35D1559EEC7240D3B816C9B3A6238A1E'>
            <properties context=''>
              <relation connection='excel-direct.0m7pspr006ztfp1795kac08y22df' name='Migration' table='[Migration$]' type='table'>
                <columns gridOrigin='A1:R203:no:A1:R203:0' header='yes' outcome='2'>
                  <column datatype='string' name='Countries and areas' ordinal='0' />
                  <column datatype='integer' name='International migrant stock 2020 (Total (thousands))' ordinal='1' />
                  <column datatype='integer' name='International migrant stock 2020 (Under 18 (thousands))' ordinal='2' />
                  <column datatype='integer' name='International migrant stock 2020 (Total as share of national population (%))' ordinal='3' />
                  <column datatype='integer' name='Refugees by asylum country 2023 (Total)' ordinal='4' />
                  <column datatype='integer' name='Refugees by asylum country 2023 (Under 18)' ordinal='5' />
                  <column datatype='integer' name='Refugees by asylum country  2023 (Per 1,000 population)' ordinal='6' />
                  <column datatype='integer' name='Refugees by asylum country 2023 (Per 1 US$ GNI per capita)' ordinal='7' />
                  <column datatype='integer' name='Refugees by origin country 2023 (Total)' ordinal='8' />
                  <column datatype='integer' name='Refugees by origin country 2023 (Under 18)' ordinal='9' />
                  <column datatype='integer' name='Internally displaced persons (IDPs) 2023 (Total (T))' ordinal='10' />
                  <column datatype='integer' name='Internally displaced persons (IDPs) 2023 (Under 18 (Ru))' ordinal='11' />
                  <column datatype='integer' name='Internally displaced persons (IDPs) 2023 (Share due to conflict and violence (%) (Sd))' ordinal='12' />
                  <column datatype='integer' name='Internally displaced persons (IDPs) 2023 (Share due to disaster (%) (Sd))' ordinal='13' />
                  <column datatype='integer' name='New internal displacements 2023 (Total (T))' ordinal='14' />
                  <column datatype='integer' name='New internal displacements 2023 (Under 18 (Ru))' ordinal='15' />
                  <column datatype='integer' name='New internal displacements 2023 (Share due to conflict and violence (%) (Sd))' ordinal='16' />
                  <column datatype='integer' name='New internal displacements 2023 (Share due to disaster (%) (Sd))' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Countries and areas]' />
              <expression op='[Countries and areas (Economic Indicators Summary)]' />
            </expression>
            <first-end-point object-id='Migration_35D1559EEC7240D3B816C9B3A6238A1E' />
            <second-end-point object-id='Economic Indicators Summary_ACE004195936494D90F3E49BEE193FB0' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Countries and areas]' />
              <expression op='[Countries and areas (Economic Indicators)]' />
            </expression>
            <first-end-point object-id='Migration_35D1559EEC7240D3B816C9B3A6238A1E' />
            <second-end-point object-id='Economic Indicators_DA1465D1C3B542E0BFD877B0B98BC0B4' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Countries and areas]' />
              <expression op='[Countries and areas (Migration Summary)]' />
            </expression>
            <first-end-point object-id='Migration_35D1559EEC7240D3B816C9B3A6238A1E' />
            <second-end-point object-id='Migration Summary_043523A671D3429EA7EC8BB0E3372573' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Economic Indicators'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' underline='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Migration+ (SWOC_Tables_Migration_Education)' name='federated.0qr1dpb0iwx7lq1gulf5y0wl9k70' />
          </datasources>
          <datasource-dependencies datasource='federated.0qr1dpb0iwx7lq1gulf5y0wl9k70'>
            <column datatype='string' name='[Countries and areas (Economic Indicators)]' role='dimension' type='nominal' />
            <column datatype='real' name='[Government Expenditure 2015–2023 (R)  (As % of GDP) (On education)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Government Expenditure 2015–2023 (R)  (As % of GDP) (On health)]' role='measure' type='quantitative' />
            <column-instance column='[Countries and areas (Economic Indicators)]' derivation='None' name='[none:Countries and areas (Economic Indicators):nk]' pivot='key' type='nominal' />
            <column-instance column='[Government Expenditure 2015–2023 (R)  (As % of GDP) (On health)]' derivation='None' name='[none:Government Expenditure 2015–2023 (R)  (As % of GDP) (On health):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Government Expenditure 2015–2023 (R)  (As % of GDP) (On education)]' derivation='Sum' name='[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On education):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Government Expenditure 2015–2023 (R)  (As % of GDP) (On health)]' derivation='Sum' name='[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On health):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Government Expenditure 2015–2023 (R)  (As % of GDP) (On health):qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On education):qk]' included-values='non-null' />
          <slices>
            <column>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On education):qk]</column>
            <column>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Government Expenditure 2015–2023 (R)  (As % of GDP) (On health):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On education):qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On health):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On education):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On health):qk] + [federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On education):qk])</rows>
        <cols>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas (Economic Indicators):nk]</cols>
      </table>
      <simple-id uuid='{7B239EFB-2820-441F-A20F-DB920DF2DFF8}' />
    </worksheet>
    <worksheet name='Economic Indicators (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' underline='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Migration+ (SWOC_Tables_Migration_Education)' name='federated.0qr1dpb0iwx7lq1gulf5y0wl9k70' />
          </datasources>
          <datasource-dependencies datasource='federated.0qr1dpb0iwx7lq1gulf5y0wl9k70'>
            <column datatype='string' name='[Countries and areas (Economic Indicators)]' role='dimension' type='nominal' />
            <column datatype='real' name='[Government Expenditure 2015–2023 (R)  (As % of GDP) (On education)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Government Expenditure 2015–2023 (R)  (As % of GDP) (On health)]' role='measure' type='quantitative' />
            <column-instance column='[Countries and areas (Economic Indicators)]' derivation='None' name='[none:Countries and areas (Economic Indicators):nk]' pivot='key' type='nominal' />
            <column-instance column='[Government Expenditure 2015–2023 (R)  (As % of GDP) (On health)]' derivation='None' name='[none:Government Expenditure 2015–2023 (R)  (As % of GDP) (On health):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Government Expenditure 2015–2023 (R)  (As % of GDP) (On education)]' derivation='Sum' name='[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On education):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Government Expenditure 2015–2023 (R)  (As % of GDP) (On health)]' derivation='Sum' name='[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On health):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Government Expenditure 2015–2023 (R)  (As % of GDP) (On health):qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On education):qk]' included-values='non-null' />
          <slices>
            <column>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On education):qk]</column>
            <column>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Government Expenditure 2015–2023 (R)  (As % of GDP) (On health):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On education):qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On health):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On education):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On health):qk] + [federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On education):qk])</rows>
        <cols>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas (Economic Indicators):nk]</cols>
      </table>
      <simple-id uuid='{B3A34492-6E69-403B-B415-36BF9B891EFC}' />
    </worksheet>
    <worksheet name='Economic Indicators (3)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' underline='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Migration+ (SWOC_Tables_Migration_Education)' name='federated.0qr1dpb0iwx7lq1gulf5y0wl9k70' />
          </datasources>
          <datasource-dependencies datasource='federated.0qr1dpb0iwx7lq1gulf5y0wl9k70'>
            <column datatype='string' name='[Countries and areas (Economic Indicators)]' role='dimension' type='nominal' />
            <column datatype='real' name='[Government Expenditure 2015–2023 (R)  (As % of GDP) (On education)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Government Expenditure 2015–2023 (R)  (As % of GDP) (On health)]' role='measure' type='quantitative' />
            <column-instance column='[Countries and areas (Economic Indicators)]' derivation='None' name='[none:Countries and areas (Economic Indicators):nk]' pivot='key' type='nominal' />
            <column-instance column='[Government Expenditure 2015–2023 (R)  (As % of GDP) (On health)]' derivation='None' name='[none:Government Expenditure 2015–2023 (R)  (As % of GDP) (On health):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Government Expenditure 2015–2023 (R)  (As % of GDP) (On education)]' derivation='Sum' name='[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On education):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Government Expenditure 2015–2023 (R)  (As % of GDP) (On health)]' derivation='Sum' name='[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On health):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Government Expenditure 2015–2023 (R)  (As % of GDP) (On health):qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On education):qk]' included-values='non-null' />
          <slices>
            <column>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On education):qk]</column>
            <column>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Government Expenditure 2015–2023 (R)  (As % of GDP) (On health):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On education):qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On health):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On education):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On health):qk] + [federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On education):qk])</rows>
        <cols>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas (Economic Indicators):nk]</cols>
      </table>
      <simple-id uuid='{BD48AB88-B789-4F1C-B4E0-25E0C48F47C2}' />
    </worksheet>
    <worksheet name='GDP ODA Inflow'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' underline='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Migration+ (SWOC_Tables_Migration_Education)' name='federated.0qr1dpb0iwx7lq1gulf5y0wl9k70' />
          </datasources>
          <datasource-dependencies datasource='federated.0qr1dpb0iwx7lq1gulf5y0wl9k70'>
            <column datatype='string' name='[Countries and areas (Economic Indicators)]' role='dimension' type='nominal' />
            <column datatype='real' name='[Government revenue as % of GDP 2015–2023 ®]' role='measure' type='quantitative' />
            <column datatype='real' name='[Official development assistance 2015–2023 (R) (Inflow in millions US$)]' role='measure' type='quantitative' />
            <column-instance column='[Countries and areas (Economic Indicators)]' derivation='None' name='[none:Countries and areas (Economic Indicators):nk]' pivot='key' type='nominal' />
            <column-instance column='[Government revenue as % of GDP 2015–2023 ®]' derivation='None' name='[none:Government revenue as % of GDP 2015–2023 ®:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Official development assistance 2015–2023 (R) (Inflow in millions US$)]' derivation='None' name='[none:Official development assistance 2015–2023 (R) (Inflow in millions US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Government revenue as % of GDP 2015–2023 ®]' derivation='Sum' name='[sum:Government revenue as % of GDP 2015–2023 ®:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Official development assistance 2015–2023 (R) (Inflow in millions US$)]' derivation='Sum' name='[sum:Official development assistance 2015–2023 (R) (Inflow in millions US$):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Government revenue as % of GDP 2015–2023 ®:qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Official development assistance 2015–2023 (R) (Inflow in millions US$):qk]' included-values='non-null' />
          <slices>
            <column>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Government revenue as % of GDP 2015–2023 ®:qk]</column>
            <column>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Official development assistance 2015–2023 (R) (Inflow in millions US$):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Official development assistance 2015–2023 (R) (Inflow in millions US$):qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government revenue as % of GDP 2015–2023 ®:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Official development assistance 2015–2023 (R) (Inflow in millions US$):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government revenue as % of GDP 2015–2023 ®:qk] + [federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Official development assistance 2015–2023 (R) (Inflow in millions US$):qk])</rows>
        <cols>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas (Economic Indicators):nk]</cols>
      </table>
      <simple-id uuid='{A5686CF9-9051-4E91-8578-D87B1C1D7DA5}' />
    </worksheet>
    <worksheet name='GDP ODA Inflow (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' underline='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Migration+ (SWOC_Tables_Migration_Education)' name='federated.0qr1dpb0iwx7lq1gulf5y0wl9k70' />
          </datasources>
          <datasource-dependencies datasource='federated.0qr1dpb0iwx7lq1gulf5y0wl9k70'>
            <column datatype='string' name='[Countries and areas (Economic Indicators)]' role='dimension' type='nominal' />
            <column datatype='real' name='[Government revenue as % of GDP 2015–2023 ®]' role='measure' type='quantitative' />
            <column datatype='real' name='[Official development assistance 2015–2023 (R) (Inflow in millions US$)]' role='measure' type='quantitative' />
            <column-instance column='[Countries and areas (Economic Indicators)]' derivation='None' name='[none:Countries and areas (Economic Indicators):nk]' pivot='key' type='nominal' />
            <column-instance column='[Government revenue as % of GDP 2015–2023 ®]' derivation='Sum' name='[sum:Government revenue as % of GDP 2015–2023 ®:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Official development assistance 2015–2023 (R) (Inflow in millions US$)]' derivation='Sum' name='[sum:Official development assistance 2015–2023 (R) (Inflow in millions US$):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas (Economic Indicators):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government revenue as % of GDP 2015–2023 ®:qk]</rows>
        <cols>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Official development assistance 2015–2023 (R) (Inflow in millions US$):qk]</cols>
      </table>
      <simple-id uuid='{B2FCAB67-804F-47BF-A74D-1AD3EE70256C}' />
    </worksheet>
    <worksheet name='Government Expenditure'>
      <table>
        <view>
          <datasources>
            <datasource caption='Migration+ (SWOC_Tables_Migration_Education)' name='federated.0qr1dpb0iwx7lq1gulf5y0wl9k70' />
          </datasources>
          <datasource-dependencies datasource='federated.0qr1dpb0iwx7lq1gulf5y0wl9k70'>
            <column datatype='string' name='[Countries and areas (Economic Indicators)]' role='dimension' type='nominal' />
            <column datatype='real' name='[Government Expenditure 2015–2023 (R)  (As % of GDP) (On social protection)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Government Expenditure 2015–2023 (R)  (As % of GDP) (Total)]' role='measure' type='quantitative' />
            <column-instance column='[Countries and areas (Economic Indicators)]' derivation='None' name='[none:Countries and areas (Economic Indicators):nk]' pivot='key' type='nominal' />
            <column-instance column='[Government Expenditure 2015–2023 (R)  (As % of GDP) (On social protection)]' derivation='Sum' name='[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On social protection):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Government Expenditure 2015–2023 (R)  (As % of GDP) (Total)]' derivation='Sum' name='[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (Total):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (Total):qk]' />
              <size column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (On social protection):qk]' />
              <text column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas (Economic Indicators):nk]' />
              <lod column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas (Economic Indicators):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{752BEBB9-3B00-458D-89CC-5EC87BA9997A}' />
    </worksheet>
    <worksheet name='Map of Migrant Stock Percentage'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' underline='true'>Map of Migrant Stock Percentage</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Migration+ (SWOC_Tables_Migration_Education)' name='federated.0qr1dpb0iwx7lq1gulf5y0wl9k70' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0qr1dpb0iwx7lq1gulf5y0wl9k70'>
            <column caption='Countries and areas (copy)' datatype='string' name='[Countries and areas (copy)_1240460251073781763]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='[Countries and areas]' />
            </column>
            <column datatype='string' name='[Countries and areas]' role='dimension' type='nominal' />
            <column datatype='integer' name='[International migrant stock 2020 (Total (thousands))]' role='measure' type='quantitative' />
            <column datatype='integer' name='[International migrant stock 2020 (Total as share of national population (%))]' role='measure' type='quantitative' />
            <column-instance column='[Countries and areas (copy)_1240460251073781763]' derivation='None' name='[none:Countries and areas (copy)_1240460251073781763:nk]' pivot='key' type='nominal' />
            <column-instance column='[International migrant stock 2020 (Total (thousands))]' derivation='Sum' name='[sum:International migrant stock 2020 (Total (thousands)):qk]' pivot='key' type='quantitative' />
            <column-instance column='[International migrant stock 2020 (Total as share of national population (%))]' derivation='Sum' name='[sum:International migrant stock 2020 (Total as share of national population (%)):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:International migrant stock 2020 (Total as share of national population (%)):qk]' />
              <lod column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas (copy)_1240460251073781763:nk]' />
              <lod column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:International migrant stock 2020 (Total (thousands)):qk]' />
              <geometry column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[Latitude (generated)]</rows>
        <cols>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D353CE27-C4D1-4F04-8087-15A5F3F1B035}' />
    </worksheet>
    <worksheet name='Migration Vs. Economic Indicators'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' underline='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Migration+ (SWOC_Tables_Migration_Education)' name='federated.0qr1dpb0iwx7lq1gulf5y0wl9k70' />
          </datasources>
          <datasource-dependencies datasource='federated.0qr1dpb0iwx7lq1gulf5y0wl9k70'>
            <column datatype='string' name='[Countries and areas (Economic Indicators)]' role='dimension' type='nominal' />
            <column datatype='real' name='[Government revenue as % of GDP 2015–2023 ®]' role='measure' type='quantitative' />
            <column datatype='integer' name='[International migrant stock 2020 (Total as share of national population (%))]' role='measure' type='quantitative' />
            <column datatype='real' name='[Official development assistance 2015–2023 (R) (Inflow in millions US$)]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Refugees by asylum country 2023 (Total)]' role='measure' type='quantitative' />
            <column-instance column='[Countries and areas (Economic Indicators)]' derivation='None' name='[none:Countries and areas (Economic Indicators):nk]' pivot='key' type='nominal' />
            <column-instance column='[Government revenue as % of GDP 2015–2023 ®]' derivation='Sum' name='[sum:Government revenue as % of GDP 2015–2023 ®:qk]' pivot='key' type='quantitative' />
            <column-instance column='[International migrant stock 2020 (Total as share of national population (%))]' derivation='Sum' name='[sum:International migrant stock 2020 (Total as share of national population (%)):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Official development assistance 2015–2023 (R) (Inflow in millions US$)]' derivation='Sum' name='[sum:Official development assistance 2015–2023 (R) (Inflow in millions US$):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Refugees by asylum country 2023 (Total)]' derivation='Sum' name='[sum:Refugees by asylum country 2023 (Total):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Official development assistance 2015–2023 (R) (Inflow in millions US$):qk]' />
              <size column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Refugees by asylum country 2023 (Total):qk]' />
              <lod column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas (Economic Indicators):nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government revenue as % of GDP 2015–2023 ®:qk]</rows>
        <cols>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:International migrant stock 2020 (Total as share of national population (%)):qk]</cols>
      </table>
      <simple-id uuid='{AA45CB21-B399-4784-B27C-2F38787CB81F}' />
    </worksheet>
    <worksheet name='ODA Inflows'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' underline='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Migration+ (SWOC_Tables_Migration_Education)' name='federated.0qr1dpb0iwx7lq1gulf5y0wl9k70' />
          </datasources>
          <datasource-dependencies datasource='federated.0qr1dpb0iwx7lq1gulf5y0wl9k70'>
            <column datatype='string' name='[Countries and areas (Economic Indicators)]' role='dimension' type='nominal' />
            <column datatype='real' name='[Official development assistance 2015–2023 (R) (Inflow in millions US$)]' role='measure' type='quantitative' />
            <column-instance column='[Countries and areas (Economic Indicators)]' derivation='None' name='[none:Countries and areas (Economic Indicators):nk]' pivot='key' type='nominal' />
            <column-instance column='[Official development assistance 2015–2023 (R) (Inflow in millions US$)]' derivation='Sum' name='[sum:Official development assistance 2015–2023 (R) (Inflow in millions US$):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Official development assistance 2015–2023 (R) (Inflow in millions US$):qk]' />
              <text column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas (Economic Indicators):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{05F9D671-0258-4BEF-AD94-D06075FD44DE}' />
    </worksheet>
    <worksheet name='Refugee &amp; IDP Counts'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' underline='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Migration+ (SWOC_Tables_Migration_Education)' name='federated.0qr1dpb0iwx7lq1gulf5y0wl9k70' />
          </datasources>
          <datasource-dependencies datasource='federated.0qr1dpb0iwx7lq1gulf5y0wl9k70'>
            <column datatype='string' name='[Countries and areas]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Internally displaced persons (IDPs) 2023 (Share due to conflict and violence (%) (Sd))]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Internally displaced persons (IDPs) 2023 (Share due to disaster (%) (Sd))]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Internally displaced persons (IDPs) 2023 (Total (T))]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Refugees by asylum country 2023 (Total)]' role='measure' type='quantitative' />
            <column-instance column='[Countries and areas]' derivation='None' name='[none:Countries and areas:nk]' pivot='key' type='nominal' />
            <column-instance column='[Internally displaced persons (IDPs) 2023 (Share due to conflict and violence (%) (Sd))]' derivation='Sum' name='[sum:Internally displaced persons (IDPs) 2023 (Share due to conflict and violence (%) (Sd)):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Internally displaced persons (IDPs) 2023 (Share due to disaster (%) (Sd))]' derivation='Sum' name='[sum:Internally displaced persons (IDPs) 2023 (Share due to disaster (%) (Sd)):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Internally displaced persons (IDPs) 2023 (Total (T))]' derivation='Sum' name='[sum:Internally displaced persons (IDPs) 2023 (Total (T)):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Refugees by asylum country 2023 (Total)]' derivation='Sum' name='[sum:Refugees by asylum country 2023 (Total):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Internally displaced persons (IDPs) 2023 (Total (T)):qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Refugees by asylum country 2023 (Total):qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Refugees by asylum country 2023 (Total):qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Internally displaced persons (IDPs) 2023 (Total (T)):qk]</column>
            <column>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Refugees by asylum country 2023 (Total):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <tooltip column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Internally displaced persons (IDPs) 2023 (Share due to conflict and violence (%) (Sd)):qk]' />
              <tooltip column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Internally displaced persons (IDPs) 2023 (Share due to disaster (%) (Sd)):qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Refugees by asylum country 2023 (Total):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Refugees by asylum country 2023 (Total):qk]' />
              <tooltip column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Internally displaced persons (IDPs) 2023 (Share due to conflict and violence (%) (Sd)):qk]' />
              <tooltip column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Internally displaced persons (IDPs) 2023 (Share due to disaster (%) (Sd)):qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Internally displaced persons (IDPs) 2023 (Total (T)):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Internally displaced persons (IDPs) 2023 (Total (T)):qk]' />
              <tooltip column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Internally displaced persons (IDPs) 2023 (Share due to conflict and violence (%) (Sd)):qk]' />
              <tooltip column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Internally displaced persons (IDPs) 2023 (Share due to disaster (%) (Sd)):qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Refugees by asylum country 2023 (Total):qk] + [federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Internally displaced persons (IDPs) 2023 (Total (T)):qk])</rows>
        <cols>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas:nk]</cols>
      </table>
      <simple-id uuid='{3488245A-5B32-48AA-B48C-381902F0B3A5}' />
    </worksheet>
    <worksheet name='Refugee Asylum (Top 10)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' underline='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Migration+ (SWOC_Tables_Migration_Education)' name='federated.0qr1dpb0iwx7lq1gulf5y0wl9k70' />
          </datasources>
          <datasource-dependencies datasource='federated.0qr1dpb0iwx7lq1gulf5y0wl9k70'>
            <column datatype='string' name='[Countries and areas]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Refugees by origin country 2023 (Total)]' role='measure' type='quantitative' />
            <column-instance column='[Countries and areas]' derivation='None' name='[none:Countries and areas:nk]' pivot='key' type='nominal' />
            <column-instance column='[Refugees by origin country 2023 (Total)]' derivation='Sum' name='[sum:Refugees by origin country 2023 (Total):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Refugees by origin country 2023 (Total)])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:Countries and areas:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Countries and areas:nk]' member='&quot;Andorra&quot;' />
                    <groupfilter function='member' level='[none:Countries and areas:nk]' member='&quot;Anguilla&quot;' />
                    <groupfilter function='member' level='[none:Countries and areas:nk]' member='&quot;British Virgin Islands&quot;' />
                    <groupfilter function='member' level='[none:Countries and areas:nk]' member='&quot;Brunei Darussalam&quot;' />
                    <groupfilter function='member' level='[none:Countries and areas:nk]' member='&quot;Cook Islands&quot;' />
                    <groupfilter function='member' level='[none:Countries and areas:nk]' member='&quot;Denmark&quot;' />
                    <groupfilter function='member' level='[none:Countries and areas:nk]' member='&quot;Finland&quot;' />
                    <groupfilter function='member' level='[none:Countries and areas:nk]' member='&quot;Holy See&quot;' />
                    <groupfilter function='member' level='[none:Countries and areas:nk]' member='&quot;Iceland&quot;' />
                    <groupfilter function='member' level='[none:Countries and areas:nk]' member='&quot;Ireland&quot;' />
                    <groupfilter function='member' level='[none:Countries and areas:nk]' member='&quot;Kiribati&quot;' />
                    <groupfilter function='member' level='[none:Countries and areas:nk]' member='&quot;Liechtenstein&quot;' />
                    <groupfilter function='member' level='[none:Countries and areas:nk]' member='&quot;Malta&quot;' />
                    <groupfilter function='member' level='[none:Countries and areas:nk]' member='&quot;Marshall Islands&quot;' />
                    <groupfilter function='member' level='[none:Countries and areas:nk]' member='&quot;Micronesia (Federated States of)&quot;' />
                    <groupfilter function='member' level='[none:Countries and areas:nk]' member='&quot;Monaco&quot;' />
                    <groupfilter function='member' level='[none:Countries and areas:nk]' member='&quot;Montserrat&quot;' />
                    <groupfilter function='member' level='[none:Countries and areas:nk]' member='&quot;San Marino&quot;' />
                    <groupfilter function='member' level='[none:Countries and areas:nk]' member='&quot;Switzerland&quot;' />
                    <groupfilter function='member' level='[none:Countries and areas:nk]' member='&quot;TimorLeste&quot;' />
                    <groupfilter function='member' level='[none:Countries and areas:nk]' member='&quot;Tokelau&quot;' />
                    <groupfilter function='member' level='[none:Countries and areas:nk]' member='&quot;Tuvalu&quot;' />
                    <groupfilter function='member' level='[none:Countries and areas:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Refugees by origin country 2023 (Total):qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas:nk]</rows>
        <cols>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Refugees by origin country 2023 (Total):qk]</cols>
      </table>
      <simple-id uuid='{82E6E037-529C-4423-A9FA-DF4ED90213FA}' />
    </worksheet>
    <worksheet name='Revenue vs. Expenditure'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' underline='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Migration+ (SWOC_Tables_Migration_Education)' name='federated.0qr1dpb0iwx7lq1gulf5y0wl9k70' />
          </datasources>
          <datasource-dependencies datasource='federated.0qr1dpb0iwx7lq1gulf5y0wl9k70'>
            <column datatype='string' name='[Countries and areas (Economic Indicators)]' role='dimension' type='nominal' />
            <column datatype='real' name='[Government Expenditure 2015–2023 (R)  (As % of GDP) (Total)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Government revenue as % of GDP 2015–2023 ®]' role='measure' type='quantitative' />
            <column-instance column='[Countries and areas (Economic Indicators)]' derivation='None' name='[none:Countries and areas (Economic Indicators):nk]' pivot='key' type='nominal' />
            <column-instance column='[Government Expenditure 2015–2023 (R)  (As % of GDP) (Total)]' derivation='None' name='[none:Government Expenditure 2015–2023 (R)  (As % of GDP) (Total):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Government revenue as % of GDP 2015–2023 ®]' derivation='None' name='[none:Government revenue as % of GDP 2015–2023 ®:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Government Expenditure 2015–2023 (R)  (As % of GDP) (Total)]' derivation='Sum' name='[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (Total):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Government revenue as % of GDP 2015–2023 ®]' derivation='Sum' name='[sum:Government revenue as % of GDP 2015–2023 ®:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Government Expenditure 2015–2023 (R)  (As % of GDP) (Total):qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Government revenue as % of GDP 2015–2023 ®:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Government revenue as % of GDP 2015–2023 ®:qk]</column>
            <column>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Government Expenditure 2015–2023 (R)  (As % of GDP) (Total):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (Total):qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government revenue as % of GDP 2015–2023 ®:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (Total):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government revenue as % of GDP 2015–2023 ®:qk] + [federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (Total):qk])</rows>
        <cols>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas (Economic Indicators):nk]</cols>
      </table>
      <simple-id uuid='{9EA55BF1-4120-4F35-A567-333C4F5302DE}' />
    </worksheet>
    <worksheet name='Revenue vs. Expenditure (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' underline='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Migration+ (SWOC_Tables_Migration_Education)' name='federated.0qr1dpb0iwx7lq1gulf5y0wl9k70' />
          </datasources>
          <datasource-dependencies datasource='federated.0qr1dpb0iwx7lq1gulf5y0wl9k70'>
            <column datatype='string' name='[Countries and areas (Economic Indicators)]' role='dimension' type='nominal' />
            <column datatype='real' name='[Government Expenditure 2015–2023 (R)  (As % of GDP) (Total)]' role='measure' type='quantitative' />
            <column datatype='real' name='[Government revenue as % of GDP 2015–2023 ®]' role='measure' type='quantitative' />
            <column-instance column='[Countries and areas (Economic Indicators)]' derivation='None' name='[none:Countries and areas (Economic Indicators):nk]' pivot='key' type='nominal' />
            <column-instance column='[Government Expenditure 2015–2023 (R)  (As % of GDP) (Total)]' derivation='None' name='[none:Government Expenditure 2015–2023 (R)  (As % of GDP) (Total):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Government revenue as % of GDP 2015–2023 ®]' derivation='None' name='[none:Government revenue as % of GDP 2015–2023 ®:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Government Expenditure 2015–2023 (R)  (As % of GDP) (Total)]' derivation='Sum' name='[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (Total):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Government revenue as % of GDP 2015–2023 ®]' derivation='Sum' name='[sum:Government revenue as % of GDP 2015–2023 ®:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Government Expenditure 2015–2023 (R)  (As % of GDP) (Total):qk]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Government revenue as % of GDP 2015–2023 ®:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Government revenue as % of GDP 2015–2023 ®:qk]</column>
            <column>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Government Expenditure 2015–2023 (R)  (As % of GDP) (Total):qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (Total):qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government revenue as % of GDP 2015–2023 ®:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (Total):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government revenue as % of GDP 2015–2023 ®:qk] + [federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (Total):qk])</rows>
        <cols>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas (Economic Indicators):nk]</cols>
      </table>
      <simple-id uuid='{BF906E95-2887-4137-B397-078D46451A99}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Map of Migrant Stock Percentage' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:International migrant stock 2020 (Total as share of national population (%)):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas (copy)_1240460251073781763:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2E7924A1-BF43-4F35-81B2-9DB773B2F7F4}' />
    </window>
    <window class='worksheet' name='Refugee &amp; IDP Counts' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Refugees by asylum country 2023 (Total):qk]' type='color' />
            <card pane-specification-id='2' param='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Internally displaced persons (IDPs) 2023 (Total (T)):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{525E0660-D47E-4371-8AC4-B9CF5FFD4766}' />
    </window>
    <window class='worksheet' name='Revenue vs. Expenditure' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas (Economic Indicators):nk]</field>
            <field>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Government Expenditure 2015–2023 (R)  (As % of GDP) (Total):qk]</field>
            <field>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Government revenue as % of GDP 2015–2023 ®:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{56B5C5F9-0E1C-4B15-B480-7331EBAACD6E}' />
    </window>
    <window class='worksheet' name='Revenue vs. Expenditure (2)' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas (Economic Indicators):nk]</field>
            <field>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Government Expenditure 2015–2023 (R)  (As % of GDP) (Total):qk]</field>
            <field>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Government revenue as % of GDP 2015–2023 ®:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{501AAE8C-A8B3-4FED-AC0D-103123C25841}' />
    </window>
    <window class='worksheet' name='Government Expenditure' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Government Expenditure 2015–2023 (R)  (As % of GDP) (Total):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas (Economic Indicators):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FD7FAF76-E475-4686-BDA4-4B4901BCB672}' />
    </window>
    <window class='worksheet' name='Migration Vs. Economic Indicators' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Refugees by asylum country 2023 (Total):qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[sum:Official development assistance 2015–2023 (R) (Inflow in millions US$):qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas (Economic Indicators):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90DF622A-64D9-48E1-B7BE-9AA05E7FB8C4}' />
    </window>
    <window class='worksheet' name='Refugee Asylum (Top 10)' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A111C4BF-1C9C-4891-ACE2-B464A2C159A7}' />
    </window>
    <window class='worksheet' name='Economic Indicators' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas (Economic Indicators Summary):nk]</field>
            <field>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas (Economic Indicators):nk]</field>
            <field>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Government Expenditure 2015–2023 (R)  (As % of GDP) (On health):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CA5B00BE-DC47-46A8-8D5A-7A85DC98C4B0}' />
    </window>
    <window class='worksheet' name='Economic Indicators (2)' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas (Economic Indicators Summary):nk]</field>
            <field>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas (Economic Indicators):nk]</field>
            <field>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Government Expenditure 2015–2023 (R)  (As % of GDP) (On health):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{034B5DF9-2B7F-4385-AB7F-59FEB4A626BB}' />
    </window>
    <window class='worksheet' name='Economic Indicators (3)' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas (Economic Indicators Summary):nk]</field>
            <field>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas (Economic Indicators):nk]</field>
            <field>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Government Expenditure 2015–2023 (R)  (As % of GDP) (On health):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1D1CC50F-2C7D-4591-A629-E4B6791142BF}' />
    </window>
    <window class='worksheet' name='ODA Inflows' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas (Economic Indicators):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{90D3DB47-9629-4CC5-9E31-6ACEEFA5D1C8}' />
    </window>
    <window class='worksheet' name='GDP ODA Inflow' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas (Economic Indicators):nk]</field>
            <field>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Government revenue as % of GDP 2015–2023 ®:qk]</field>
            <field>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Official development assistance 2015–2023 (R) (Inflow in millions US$):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7E88A8DC-0F06-44D6-9BC1-8C1F0FF7D0E8}' />
    </window>
    <window class='worksheet' maximized='true' name='GDP ODA Inflow (2)' tab-color='#f66273'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Countries and areas (Economic Indicators):nk]</field>
            <field>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Government revenue as % of GDP 2015–2023 ®:qk]</field>
            <field>[federated.0qr1dpb0iwx7lq1gulf5y0wl9k70].[none:Official development assistance 2015–2023 (R) (Inflow in millions US$):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA6B60FC-B8CB-4076-8CBA-84E4B4BA8B42}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Economic Indicators' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29d4wsW3rY96uqzjnN9OSZm/N9Oe/bZVpxtYZEcxlsUZaVDFh/EYJhQ4YB
      y4Ih2KbhvwjLAinbsgSCXFtaUlim5XJ333t84b69L92cJ8eezrm7uoL/qJm5M9PVNT155t76
      AYN7u/pU1enu+s4533e+IOi6rmNj85wi7vYCtvzYHGd2LQCVSmUv+mHzTKMfsYHyaX92LQA2
      R49WvcR7773P9HwKTdPQdX3Dn6ZpLEyPU6zL6LpOOTvP9GJhre36czYf0zSNa9euAXrbtc3a
      6rqOWs/z/idf8Qd/9AOm51PoJu00bfUa+rpjGrmFSRbztbW21z/4gNr6c+Ua1z69zt2Hj9F1
      DW3tPZUHDx+Z9Me416cfvk9FVnEc9o9ls/fMPbhD8twLJP1N/vhP/wKXx4nW0oAWcrWCquq4
      HTrxcxoT13/MyVNjlFpO/vC7dzh97gxzc8v88q98B69a5Pd+7/c5ffEyTdGDQ1aoNpsomsJb
      usaffe8PKEkJ5PQThoZHuPNknJdeeZeJOx8zdvE17t5+wK//p7/G8t2bnH/169z/d99H0Or8
      0R9+n8sXhrg3XcDndpJenMTpixB0Qr0lotNEq8mE4h58/ih1dZavNJF3336dfCbDZ+//CU3F
      ha47acgNVB3y2QzjD+5y9aVX+PzDv0APDpKZn6GUXqDYVBBpMTFRJBLW6B29xKXRBA/HU/YM
      8CzSOzrK+I3PmV5YBkAQJGqlDLlSDY8/xEBvlIGhYXRNI94/yoVTwyAIDJ86z5VLlzgz6Of+
      kzkmxx9z5vxZao0mo6fPoDfrqJqAJIkgF8m3fARcAsnhU5wZ7efs5dcIU6Dn7GValRZnRoPc
      ezyHP+CkWpURAE3XEQQQBQl0HUEQiCcHCXodCIKADri8fsYGBjlxapiWoiFKIuggAIIgIEoS
      p06foFmvoyMhigKCICIKAo3yMpqnB7/LTX9vBFEU0DUNQRS5+NKrvP7SCzy8fZNqs4XH60LQ
      DXb8ZZfLZYLB4J78cDbPJromc+P2I1564fJhd2UFnVs3bnDx6otPBWCnymytVsPn8+1xB21s
      DgYHGNPKbkZxewawOa7YOoDNc40tADbPNbYA2DzX2AJg81xjC4DNc40tADbPNbYA2DzX2AJg
      81xjC4DNc03XAqDrOtlsFnSdfCbFcrawn/2ysTkQunaH1loNHk9MEQ37ePBwnLEz5zf4gtvY
      HEe6FgDJ5SUWCaJrKqFYH6XcMslEZC3QwMbmONK1AMi1Mo16g3RRJuIXENwJRFFEFEUkSdrP
      PtrY7BvCbrNC2PEANscZ2wpk81xjC4DNc42pAMiNGo8fPiCVKWAbeGyeZdoEQK7kufbZV4gO
      F4szT7j/ZOoQumVjczC0CYArEOWNS6N8dfsu2arKxTNjh9AtG5uDoU0AdF3jk08+pFaTD6M/
      NjYHSts+gCCIvPHW13jRO0gtN38YfbKxOTBMN8Lu3/qSidJdhocGGRoaPug+2dgcGG0CoOsa
      +ZoKzRKZrOcw+mRjc2C06QCCIPLOGy+RLlRR5OZh9MnG5sAwXQI5XD5ee+kqhZotADbPNqYb
      YYLDycximjMj/QfdHxubA8VUAJRmlczyErfuPT7o/tjYHCimAuBwBehPRPCHwmvHNLXF7bv3
      AKiVMoxPLx5MD21s9hETK5DOvZs/xRnqo783sbGxQ0LXVOaXcuiCY62Kh6IoB9ZhG5u9xFQJ
      To5dJq6B5HSvHdN1aNRrVEoFZFlmOZ/n7JmTiKKIw2EXmrE5npjsBAvEwz7+4r1P8IZ76E/2
      AKBrKv19/WiSh0uXLnGm1TrwztrY7DWmQ7dcySB4YiR74k8bujz09fWtvXa5XPvfOxubfcZE
      CdaptUQq2TkQ7aWNzbNNuzeopnH74SQ///M/S2p+6hC6ZGNzcJjMAAKSJvPTn15HcPntnD82
      zzRtAtCqF1ElH73JJG6tzv3xmcPol43NgWCaFkVTFTLpDL5QhIDP2iPUTotic5wx3QibeHSf
      8alZvKE4r7z6Mn638zD6ZmOz77QJQKtWIJUrc+mlN0iEXCyllvGPDB5G32xs9p02HcDpDdGS
      azx+eAePL8iY/fDbPMOYWoGqhQypxQX+/CcfHXyPbGwOkPadLkGgN9mHsyITiUYPoUs2NgdH
      +wygq5RqTS5dukS5sHwIXbKxOTjaBUAQ8Xvc3PjyM2Td9vexebZpXwLpOk5/iKRTIl2sH0KX
      bGwODtMZoJFfJpUp4fFH1g6rcp2PPr2OrmmMP37AnfuPDrKfNjb7gmk8wDs/9622hpLLS288
      giAKhAJ+nJrLjgizOfa07wRrKj/43r8mduHn6I94GRkyMkPItTKppRSBYICp8RmGTpxaK5Fk
      R4TZHFfafYF0ncXJu3zw+QMGx87y7utXLS9g+wLZHGdMdACBgEdk7NLrtKrZQ+iSjc3BYZoW
      JdB3Fkd5jqHR0wfdHxubA8W8RpggEQ4H0bGDYWyebUwKZOjcufEFt+/eZ3xi8jD6ZGNzYJjO
      AM16BU10MjI8dND9sbE5UEyzQqg6DA6f4NxJuziGzbONaUikrmu05BbVeoNoJGx23hq2GdTm
      OGO6g1VdfMAPv5hDl0R+5du/cNB9srE5MEwFwNd7khPDip0SxeaZx7RM6p//yfd5fPMjmq64
      2Tk2Ns8MJgIAZ8+ewxuMUMim0DTtMPplY3MgtAmAUi8ys5glFB/E3SrwYGL2MPplY3MgmFuB
      NI1qtYrT7cHtss4JZFuBbI4zpkqwIIoE7Ifa5jmgTQDUZpUPP/kpjUYD0eHi9IXLnBzqQ5Xr
      fPz5Lb72xsvcuX0bpz/ChTMnD6PPNjZ7RntAjOigNxHFGeqlVS3QHzc2wiSXl76eKKpaIxIf
      RZGLdkSYzbGnTQAkyUG+VKEy9YTB82/i9XoBIyJseXmZYChKubCAKxC1I8Jsjj0myXGhnF2i
      3ARtdpqLpwYRRRGXL8jX3vkawFrdMBub4067GbRRwumPEY/HcetNHkzMHUa/bGwOhI7OcPV6
      A6fThdNpvbyxzaA2xxmTJZDGez/4Y+q48Abi/Ny7rx9Gv/adn/zev2Du4e2117/xT38bh9PO
      hPe8YZoZLtQ7RJ/XQ71eO4QuHQyKLNNqNg67GzaHjEl2aBG9WcbXP4bfXzqELtnYHBwmM4CG
      5vAyfusT6qKP0dETh9AtG5uDwSQ1okhPNITL4aAiH0aXbGwODtN4gMcTkwyPjFAt5Q+jTzY2
      B4ZpdmitmufaZ1/iDdoVYmyebUx1AHcoRrOq4HfbIZEHQW5xDqXVBEAUJRJDY4fboecIUyvQ
      iVMXSEb9/OjajUPo0vPHB9/9HXKLRuCR2xfgP/tn//sh9+j5oW0JJAgCJ06M8Xh6lr/51795
      8D2ysTlAzHODAtFIFDsphM2zTrsVSFO4ffsmX33+KX/8gx+3naDrGhNPHjK/lD6QDtp0wWIK
      vroD6hYJDHQde1TbiImnm8jSzDhjl15HUtqL5OmqTKlUw9ES6O+No2kaqqoeQFd3zvTdLyhl
      UmuvL77z19oyX6uqiiAezufY7I+43e9TSKXRcwXEH/0V+psvowf8m2+AuJxF+Pwm2vnT6KdG
      d9vlZwbTQtknz1xAVmUWc+37AJoq4/JH0VoVBEFAEAREseNK6kgw/tU1Zu5+tfb64tu/gICw
      oY0kSof2OQRhY1+23Y9aA+HlK6BpCB9/hnDuFJxcechLFfjyFjid8OoLCONTCGeO/u5+enaC
      L/7iD9den3/zZxm7/Mqe38fU1/n+/XsMjpykUqm0vSe5gsQCBVyBsTUB2PwDHj0Ey5erx47K
      59h2P5pN8LjB64FvfgO+uAkLKXC7oFCCl69APAq6jnDznrEMOuKDVqNaZuHx3bXXw+eu7svv
      0+4KAYwMDZDN5xk2qRAjCAJ9gyN73hGbXSC3YDV9jdMBb7wM84uGTvDai7D64AgC+LxQqUEo
      cHj9PUKYukIsZYu8/sbrLM9PH0afbLbDqr6wfkQXBBgagNGhpw//KskEpGwDxiom+wAivWEP
      n1z/ilPnzh9Gn2y2g9wy1vfdLg+SPbYArMN0BshXZarFAvns0mH0yWY7NGVjrd8t4SBUqmDn
      fAU6uEKcPHWOZCzAjz62XSGOPNUa+H3dtxdFQ2Gu1WGzufQ5xNQVYmR4kLuPZnjnjZcPo082
      22G7AgDQ2wOpzP7055hhagurLj3iznSaGzfsGeDIU61BYJsC0GcrwquY7gO4wgOcTuYZHDtz
      0P2x2S7VGvi2KQDhEJTKhh5wxPcD9hvTT682Snz+1W27TvBxYLtKMIAkGefU7awYpgIgOL2c
      Ghuya4QddXQdWus2wbZDbwKWbT3AVAAcngCXLl1C0Oyo+CONqhpLmJ0sY5I98Jx79NZKBXMd
      oJ6bZzHfIByxY4KPNKubYDshEoZiyZhFjogP1EEz9+i2+Qzw4M5NpqdnqTVae39XVYWsnW1i
      T2g0weve2bkOyRCe51wPMN0JdoZ6cOt1qrV9SI1YLMP1p+ZVXdPQVHXt73nVO2LuIEnvNmfc
      newBrKc3Dunszs9/BjBdAhUKRRxOFw5JantP1zWePHqAP9LLQDKx/TsWSoYJbmXq/fgP/w0P
      r3+w9vav/ZP/lVC8t6tLffnDP2Lhyb2119/8+/8Yt/f47W4KCLzaew4RgfdyD7o/cbcCkOyF
      yRnDaW4/0TRjmXUEl1qmmeFevXKa2xkfzexU2wlqq0w6XUER3PT1xLZdIknMFxBUFa1aQ/e4
      0fSNPima2v31CsuLpKYer71uyTKSs31J0BZxpbTPNKqqgnA4pZ5GAj3kCiVEQWTAF+v684vl
      CvpgP/pOS1SFAkj5Auo+l7gSP/kc/eQoel/3hVU216fW9L0vxaVpmvkM4IkM8sUf/EtCI1fa
      3pMkH16viKIoOyuRVKlCMoHUaELAjyhsXIWJUvfX2xwgIUmS6blt7RxS1+fuO6rKaU8P38/d
      wiU6+MaJ14yZt5vRst6EoB829fvW+3+GvJLZ2+0PcOXr3zI/3+EAhwOHooDHs9tPYk61BtPz
      htnV0d/1aZuj4kRh70txiaJoLgCN0hKX3/k2YwPxtvcEyclLr7y6szvquqF0DQ8YFohEbGfX
      eZZ4NMG9ufs01RZNtUW5WiSZyUFP+3ffhiyDq30T7N4nP6JayAEQiic7CwAY90ll9m8ZdPch
      XD5nDHxHEFMrkCc8gEstU6u3B8XvCkUxbNaxiKEMP+80ZZicYdHxdL/lTnYS7j3aOnuDrkNL
      2dkm2HpODMP41P5ki2jKkM7BuVNQbg+vPQqYCkCjMM/tqWVqxT22ENRXYldDQUMRfp7RdWN0
      PH96wxKmImqGqXir76elGKbM3SqWoZXyVvvxgD54AudPGbHK9ebeX38PMBUAX2KUQZ+GLOzx
      urBYMhyx3C5jdHhOTZ4AVOuGK8LYcPt7F87Cvcftx9fT2sUm2GbOnoKHEx3fVlry2p+qdLk3
      pKgwOw8nVuPHj+Zv3XEnuOkIks3s8VZ5sQSRkOGMhWB8Sc8jug4378LVi+ZuDMkE3L5vBK34
      vObXqDfAt0cD1EASbt3vKFS//z/+5lo5qcTQCX7pN/8H441qzei/16Qf41PGwy+KxufdK2Hd
      Y8yd4SQnrXqZQnqBG/ee7N3dimVjyhUE48fbax3DAr/Dwwuxk4imOVH2EV03dJ9K1VA2J2fg
      5j0jlUl/h/0OUTTWzfctvvvKLvcANt9vZACmtlESV9fho+vw4w8hX9g4m2s6PJ6EsyeN14Jg
      RJ8dwRnfdAaQXD6UWpHo0FlevNieGmVH6LoxovlXRrRQwEjadED0+2L0+2P0+iJIzX1w8ejE
      /BJ8fhOiYeOB9fuM/587Zb1+H+o3lOFO7s673QTbzKkx+KtPjX/FLgaJyVnDinf2JHx4HS6d
      hZFB4zPNzhuzyvpRP+jfG6V9jzEpk6qjqhqvvvOzVEuFvbuTtqLcrX4p4ZCxJDogEp4w15cf
      4hAkBt/7BG/tgDxd01kjN89g3/bOkyRjCTExDRdMApOqNcOVYa/wegyBynZhglUUuP8Yvvmu
      YYb95rvw8WeQL8LVC8Z733hr4zkBvzELxiJ71+cOaKqKqj7dNJMkB6KJVwOYCYCm8nhmAXQN
      SdzDKau5YrNeHfXCISN72QERdvkoyTUUXUX9xptc/UEZV7nO3fzU/qlnum64fqwuBYA7H/6Q
      WtGw0UtOF6/84nc6nz86CB99ZliKNs8W9Tp4O+gHJrTk5toSRBAEHC4TJ7pzp+DhuDGyW81O
      dx/B6bGnexBOp/HA37wHP3jf0PM8m64f8BuWpgMQgKnbn/Pe7//Ltdfv/Mrf4/wbP2Pa1tQV
      YvrRHUoN8EV6efHFPepVqbIxG5nPayyJDgCnIAEair6idHvdfFafp9fh4oX4SW5kO1tAdoUO
      NBobFNknX35MdiXhmMvjsxYAj8dI1ddotD/scgvc3S8n/v1v/RNqZWNGD/f286v/9f/c3igR
      gy9vr3iZmivYYqMJC0vwiz+z8Q1BgBcvGdeIhtcEaK0Ws8uBM3X0NsPaBUAU+Rvf+VvogoSu
      7aGVZtUCtIrLaawJd6kYhZw++nwxHhU7K3Bht5+ivDHHkabrfJF+zC8Ov8rN/RIApWXY+Hdq
      qxcEGOiD+ZQx4q6iaYYFba9dNwQBTo3Ckym4Yp4U7awjBi9c6hyEM7TR3eHf/vf/aO3///A7
      v7lXPd0zTD/Fzb/6Pt//y4/40x/+ZO/utLoHsIogGMpdY3cbJK/0nOFcxHobP+EJkWm06xsa
      OlWlQdC5h8rkegqbhH4nDA/A7MLGY4pi5ADd5SbY3MPbzNz7ipl7X7E4vuKFOjps3M8kRXvc
      HSI5ONbZerUF+hHcDTYdQk5eepXqk0ViiW34h6wWX+g0MlRq7YmY/D6o7nxa7PfFkLUZqq0G
      PkfnwJCEJ8xPG0XT92YraYYD3Xspbgctk0UN+NAbxlLP5el+zb5GwG/4/Kz3+5F3GAe8iQ++
      +7s0qsaOc7RviO/8V//cEKxkAj78KQz2Q1/PWir5l3tOcyM/xc/sUPCaxQL75HK3Y8zNoGqN
      quqkV9rGB1VVwy78jbfaRyZNM5TgzYpRJLhzU6imMab7+A+ZccaCyc7BJLoO5SqVlrm+sVDL
      8vX+dq/XvSB75zYf3n6ffLOCw+Xm7/7z39n+RQThafzuyKBxrFrrvEG2F7x02Zi9ljPwxW2+
      2fcCsiJTaFYosnMTciWfwXPEQjDNg+L9cZYm7jC9eepdQdc1Wpt3cSXJ2AAx8/rr5LcSDhFg
      hyPZ+DT3J25TVRos1nL0+zp4lsot8ulFVN08F2ZTbSEgIG1VXmi76DpBh4eSvAdRdSODMDP/
      9PVe7wFsZtVh8fxp+Jm3+Mulm/x0+QFfZna3KVqulbe95PVI20z5sk1MBaBVzdJwhgl5zN7W
      WZh+wp0HmxRHQTD8WqZm20+pVs3zUAYDhD07yFMvt+DxJIWEcW6hWSHk8iOajSyFIplKzvJy
      89UMwl6bZDWNSj7TUfC2RSQE5epT15H9FoBN6OiUWrVdf5ZKq7Ytt2hJEPkbo2/uWAgirq2j
      A02XQP6eMU4nppC87Qpcq15ifCaFKrjQNG1jRFh/D9L7T1A3bdwIuQJCKIC2OaLHIREObRy5
      O0WEKbKMtrK54Xo4gXhqFH0lfFBDp640kWQVxb3xXHE5Q1be6Fm5OSJsrppGnZ5DX11irOP+
      tZ9QTD+1IL35N3+jrY0ZQrlKrrQx746iKJt8wnQURWmLTjP7/GIsjJ5aRk/2IJar6H29nSPB
      9PX/XbnHxoNt99B1vcuIq27btaO4nKjFMno0vGVbTdMY9CcQBYE+X3RbEWGqpuKRXPxHI2/w
      Sepex6jFjhFh9dwC+Qa4THx1nN4wX3/3bRaWMu0RYZIEAT+O0qYNj3IFkj2Im812koQ/Esch
      SGs2+k4RYR/9u/+L8a+u4Xd4+FrfZRJ//+9siOpaquU4nc5BdNNGS66AEg7AOh14c0RYUa6h
      l8o4BGHFUe8pc/dvbIg7fueX/05bNJkpxTK5xkbBczgcm8ozCTgcjrbrmUY+jQ7D9JyhmMqy
      MQN0MoMK6/+7co+NB9vuIQhClxFX3bYzIehHqtW7Mt9KosSpUD+fpu4zFOhB2UZEmCRKjAWT
      3MhOcD4yjOAOmJ4rimIHZzhRp2mVEkWQGOhPmhwXjO37yZmNx0tVCAZN2zsiEUsLzmZejJ/i
      dm4CbdOouVTPoS1sqmeg61BrdKcw9sT2NkNCvkBe3kOzXyIGucKKQWFvrEAHTjDQddyBR3Lh
      FB3MVtKEnf7t6c0CjAR6eVKa51rqPrHptKGHbqJX9JsLgKZqKKpMU96Bxt+3knp7NahZ141t
      +w6uu1W9RcjV3Xo24grglhws1NrX9CW5hpzJbLRfN5rGg9LBD2QDw4Pt9vadouuQL9Laac4e
      MxySsZOezYOudfeZjhoBn6G/dEFCkZgsL6GhU2pVibi61xUjrgANVaaptijIFaabOcMhcf2g
      mc6i3bprLgCiw43Ps8MRxuGAWNgIhYOnYZAdfrBis0K4C2UF4HxkmLv5GdP3dEAP+DaaVfNF
      Y1u+G3pWcuTshcuujqU7wY4ZGYTx6e2VRDpKSFJ3MSC6TuvxONNlwzCxUM2SdHW/oRittBgv
      Ph3MtNWgo/GVmnfFEnx2k8yJpLkOoKstarUm0Z06G64ug5KJp2GQHSi2ql0JgEdyEXb5WK5b
      eKj2J42q6asPfSbbfeC9JBrr6lLFKCO0G5SWsaG0C278+I/XfHdcHi+vfutXjf2A6zeMDAvH
      EsHQT7ZKy14skU7PI2vGsmWhlkPoNpGvolJ+9JDF+rpVggC8chV+/JExKN28B2+/Ck9ums8A
      ksvHm1/7Oj//7htdfrBNJOJGkISibnCBaDUbNCrltT9N06gpza50gFPhfibKS20V3jeQXFl+
      rY7i2bxRH7dbzNwOdsJ2Zp4OjH91jfuf/Jj7n/yYR599aBx0OZ/GFRxHBAx9bKt0jOPTqOuy
      VDRUmezMhBGxthVLy2Sa5TYdEacT3nwFPv0CXr265qJiPgMIEp++/+fMjJ3lF77+5tY33Ywk
      Qk8ClpY3OMFd/9P/lwefvrfW7Ff/m/8FWVVwiIaVouPDrar4i3WmylsU7Qv4jKWHqhrT7XaX
      IQN9RlDIpbO7W2LkCu3WqL3iGFR5tyTgN/Y0Ogmxqhm73mMb/Y3SjSK9y1nruApdN+InTo6A
      WYK9SAj+429tWI6bzgC6UqflDNIX20WawZMry6DVMEgLmqqMR7LQORZSPJ55QKsb79RIyNjG
      r9aNh387qcNXl2qyvPbvgCvE1/uvcCW2jQcvXzT0oP1geMD4O66sBsZ0IpU2An02/W56X69R
      /NuKZtOYXawcEDfpoqYzgMPtxy/IpHIVLlvfsjORkKHxq9qWU3a11SDg9FJXTaK0dB0eTZAP
      uWC5i/sOJI1Am2h4Z6PwQB98ecf4MhtNnPUWt7KTvJW8wOPi/Nbn67qR0mQLoX9uCfo7F+jT
      dSOY/tJZSG0q0p6IrljALHyJpuaMBF+NdnO20pJpNZ7uazlXHBNNBUDTBRKJ3YXb3XjvTxEe
      PGDMG+cvf/uf8tf+3j/u2LYgG4pw2sxjs1gyllTBLs1gvQl4MmlYn7aRi3KNkyNGvOvQWQgF
      mP5Xn1GQK9zOTXJ1ZRZo1qpru9IA3uC60V7TDSvQcTRTHgSBwFNrzGZaK8kDopF2AZAcRoBQ
      pWYI0WZ03fCXevcNeNguAFO3P+eD7/7u2ut3f+0fGhuCZv3QNQ1V0xno3bmbcL1cZCY9gTOm
      UVxe3BCjuZmiXO3skvxw3AjVW7zd3Y09bmiphiejWSztVvi8xgi0iblqhsuxMag3+NG//W2W
      Jh4CRgTdP/it//tpw2p1+1UbjyGTtz5DX9nrcfsDDJ651N2Jfm/nvYCZuaeB9Wb098JSCoIn
      298rloz4km2ank0FQBR1ZLlFKpXmyvmdZ4WotOpcS93fsl2+WeblxGkuREY2KiXNJuRLRlB5
      twiCYfmZnd9+8bgtuJWdZODWPetGucKBxL0eNh9893fXkmT1jp7uXgBE0ZglN6PrxsxgZXkc
      6DNCNs+YCMD4tBHNtk3Md4JbTZBcKMrBZE6QNYUfzn2BJIh4rt2AxeUVjX7GyF253RpYA0mI
      x/a8BOhCLQvFMkLNwoz3nAjArhDF9oiz6TmjbJOV20rAZ3gVrD9X1w3T9XLW2Afablc2H9B1
      nbLi4URfkERiZ6FvO0HVNe7kp6hdPWskVfro+lMB2C79vfDmS3vfSYCrFzihd7CO6ToUisYP
      aWOOILQvg1qKkWnixS1mEVE09IPsymaoqhoGi4lp+Lm3d6R3tQ+RusbUzBTBWA+N8iGUz/H7
      4N3XjQRN506apv/eElEE9x764aynr5eR0XMEnB1GqoZJ5JvNRtabQnUd7jyAsye6W7IOJI2s
      FJUavPexUSPt3Td3/HubpkXx6DJ37tynb9RMidSp12oIkgvPNtJybAtBMD7oDrj/6Xtk56bW
      Xr/Rpf/+tu5RXeSF+Ek+Xrq78Q25tSfB6tvhz37nt6iu5Bnyh6N8+7/8bw/s3pv53v/236Gt
      7NUkhk7ws7/xj8wbBgPGZhgY3qGpDLzw9e5ukuyBL24Zpu5Xr+7aLcSsnApXXn2bTlGyuqaT
      y2XJFipcvXxxVzffDxYe32Xq9udrr1/79q/v+T1S9Tw9ko9eb8R42CdnjBEpV9ie68UeUMln
      KOeMJMaaSSaH7TJ56/paySS3z8/w+Re6PreYSa2l0tlgGt5MwG9saum68TC/cqV7fc3lhMvn
      jc3APZhpt++xJQgocpP+gaH2iLB1tNf+Mq/L1W2NMLNzd3xsGzXCOl3vq8wTLsdOUFOb6PUm
      ejCAnkyghwLGHgS0uXZsJyJsU7OO0VBb3WO7EWEffe//WSuvFBsYof/05nV5e4DPwbEAABLZ
      SURBVESYaTSZyTFN01iceMjn//7f8EJwmLlrP+D1y18zNi1N2m54vT4ibFUv7PCdqJs8Blaf
      07brd9oHsEJXm+TyZQR3EDEW6lgjrL32l3ldrm5rhJmdu+Nj26gR1ul62WaZDxZvIQgiVy+e
      Mc05LWw6up2IsE3NOkZDbXWP3USECZjd16SdWTSZyTFRFNFVlXRmEZdvmJMEGBfKnOsQrbXh
      9TYjwjZfq+16orgzARAdHl565eXtnrYtUlOPKWWf+j2MXdlhTTKbI4mOjkdyci8/jU/dgZVv
      DzmEsohb8/D6Bzz+/KO11/2nzNP02RxfPks/YraS5mVeP9R+HEkBOCzmH9+lVsyvvT79ytuH
      2Jtnm5lKN56N+48tAOu4/cGfM//oztrrUy+9ZdHa5lnAFgCbY0Mln2Vh/KlvWe/wSSLJ3cVG
      2AJgc2zILkzz4f/3f669fvOX/vauBWBvvcVsbI4Z9gxgc6xpyU3q5aeBVB7/9iLxbAGwOdbM
      PbjFT37vX6y9fvuX/3Pc3u5j2fdEAJ58dY25h08jtl791q/sxWVtbPadPRGAzNwk419+svb6
      6jf++l5c1sZm39mRAFTLJRxuH26XvYKy2T3VQm7DCqJnxCTkcZ/Y9hOsKQ2mZxcQRJEL59uD
      x59XvvrL/0AxYyTuEkUHX/9P/otD7tHxIZ+a56Pv/eu11699+9d3bd7slu0LgCbjD8RRWgdX
      5f04MPfoLsvTjwGQHPsjAH/yf/xPlHOGC4EvFOGXfvOf7fk9nje2LQCSM4DSmMcV2F3eIJvt
      U6+UqJWMeNiuinTYbIkDjICGZrP74mWDI0aCqEajgSzLCJILd/BpJgS5pYBz47FWS0Fwuje1
      ayE4289taye3EF2eDceastx2TJZlRJd3U7sm0uZzmzKSe1O7ZhPJ7dtwrNFomB/z+NeOCYJI
      o9HA4X3aTpQcK8eetnM4XSvHAmvHnG5v2zGX10+j0cDpCz495g+uHFt3rj/0tN1K0ljnSjuX
      L4SyUvRv9ZjTH2I1fsrpXWkXCKOv+M47vYG1Y4LDiM11rDsmujwrx4z+uYORtbQoDs/TY6sR
      YeuPraKLDhRN23AM0YGi6ZvaSagaG45pooi6uZ0goeqb2gli+zFEVIRNxwRAQNANaHWTedeE
      arWK37/R7qppWlsAgn3MPradY7qut81yOz22GnFndsyx+oZrJ9kXMEbOzeeudkBVZDLZPG6P
      j3Ao0LGjaqtJJl/A7fETDvo7tlPkBrlCCbfHR8iiXavZIF8s4fb6CQV8Fu3q5ItlPN4AwYC3
      Y7t6rYbSaqCJHkIW7aqVIplMnmAkTjTc+fPWajVazRqiK0DA5+7YrlmvUGuqeDxePO7O7crF
      HNl8iWiil5C/c/9q1TLlSo1QOGp5vVq1TKVaJ7hFu1I+Q6ZQYXhkFLezfVm29r2UCygqhMJG
      nLDZgwg6S/NzNFWR4ZFBxA7tVo/VKxVcfn/HdqCTWc7gDQbwe70d77svvkCrN0pNTzExn2Jh
      Yd50zbp6bHF6iun5FAvz1u3mp6eZWVjast3c9BRzC0sszM9ZtpuemmZhcYn5LdrNz04zu5hm
      aX62YztNVZmcnCEai+Hztj80G/s3yUJqmYX5Bev+TU+xNDfHzOyidf/ml4jFYnjdLst2M9Pj
      LM3NMreY2+J7mcHldiOJgvXnWEgx2ONlai5r2W527jELU9PIQvv1hJVjmtogW2gQj0UQLdqt
      oq8kye3UTq4WuHfnEVPTMygW7fbNGU7TVELxHpJhHy6ftX+GPxRidKifeE/nRFyaquANhogF
      vZYZB1SlRbSnh0jAgy/YOUOD2moR7+kh5HcTCFtXkYlFw2iqim/92nUTSquJPxAgk1mmUrPW
      p/r6+ggGw/RskXvV7/OhiSLRLTLN9fbEyeXzNJrWy9iBwTE8HjexuHW5oZZcJ5NO05Cty5IO
      9vcyPpNjdKjz99ds1PF7oxSbLcuS6KLkwiXKzC+mrUqgoGsK6eVlCpWqaRz2Sitamkgs7kMQ
      XRaWHn0/vUF1JJcbj8dLeItksaKgMTMzv0UdWJ2luTlcgTDlQt6qGW6PF7fXR8DfOVGqrutI
      Dic9yQF6YtYPRK5YRdAVyuXOpl+Xx4eqKKitFtl02vJ6vmCIeDRIatm6XalUxeMSWV6ybpdJ
      L7E0O0cqY1E+CliYnyfak8S3xQZmKBRCURQ0sxye60hncghqmdm5zoXINVVhKZ1nbCCElXjq
      qoysOdHqFSyTuwgioVCIYjZr0U5HUVSiiV6iQb+FQO2jAIiig9LyAi3RiXOLelk6EhcvX2bQ
      Ip25KDk5c+40tVKRaKJzMiTJ6WR5fg7R4cLp6Jwqz+FyUcosMLOQola3HrGHBvsJhyP09VlU
      JwHiYS+4AkQi1jPe0vw8+UKFkeH2wtyrNKpVevv78Hh89A9Yp6gMRnpIJqN4tsis5vO4yOVy
      NLao/tlolMkvp8kVrSs6uiQdyR0hEu2cut7rD9Ibj1Cua5YzgCC58brB4Q9Y2uZ1XWNmchxX
      MGLRTsDr8+Oy+P0NOtQJ3iv84RCVQp5Ktb3g9nqcTonPrn3E1HzKsp0gOgj4fVRK1ptwgaCf
      TDpNuWJ9X9EV4MToEJWS9cg5OztHMBTBu0XZ00y+jFqvkM9ZX09XGmRyRRqNzsmHJYeEIEp4
      fX58Fim/1VaDRw8eoegCikkt3PXU62Xy6Qy5gkWFFiCRHKE3GSNoMYMCVJs16sU8+S2uV8jl
      cHqsRmLQNZVatUm9WkWzaKfKdRTBg1wq0PnTCqDUSeeruNwui6WStr8CoCoq1VqNasW6OHK5
      UOTspatUi1s8OOhGefst8sPUa3UUTaBesbqeytL8PLMzM3gD1slsdbVFOp22FGSlJRMKBSkU
      i8ST1jOFPxTB7RBQLDK5iZKE1pKpVmvIFiZq0eHmwsVzBIJh4nHrzxFPDpNMxggGOmdgrlWK
      NBpN3P4wPk/n77lSLtOfHCWa7GWgb4v79kTRZdniQTQQJaHNHLoZyeFErpVoKDJLi50C6zWW
      Mzk0pUmxVLYQvH2eATRVw+/3rW3KdCKcSFDJZ4nErJXRVrNBuVLD67PWKaLxOCgNvAEr5VGi
      b2AAl0OkaKVTAOFwmJbSQtUsPoeuMTu3xKlTJ0inrGeybKFEq1kjn+8soJLDSS6foVoqsrjU
      uUSoIAjE4gkiQbdlOwBBU1A0oS0T3Xp8gTBKs0xqfoFitfMMtTA7y/LcHHiDOLZ4smu1EvNz
      CxYjNoCOILk4dfqE5UOpqQq55QLeYJC+/k5LQ52mInLlyiUkVbacUfZVANxeN4IOwWDnNbGq
      NLl76y4KkEl3/gHVVpMnj8dxuD2W7QCqlQrBcMRSBwDweByIrsCWU32lUqNULJKzuK/D5eHM
      qREKxRKJns66jFyv4vF4CYQi9FokdtV1jXish0q1yuBQv2X/ysUckzMpkr3WA0ghl6HcUCxn
      AADJ6cXtElAsZp7h0RGiA/140U3rXTy9Zxp/ZIgXXn0FKw1FECSa5SLTcwuWSyXJ6SHZF0FR
      oPOvKyIh8/DhQ+qaYNFuHwVAU1uMP3qC4HKTzXR+cCSHm7NnTyGA5cguOpz0DwzQ09PDxS1K
      H9WrFZryFiM24PH6cYoqxbK1shdJJBjs7yUcsTZHVipVKpUKFYsln9Pjw+9xIEguNAurV2pq
      nFQmjT+aYHHeujxsajlDb28v7i2MDaFIDK9LpL6F0u/1BgiFw/h9nQcGrz+A1+2k1WrPbbqe
      cDRO0CNx84ufWlqBNK1JMVNBUWSLmULn8cOH6C4Pkq5ZCIrAidPnOHfuHBdWnq1O7KsZNBjv
      xS1o9PVtkepclJAE8FtUkxQEkUDAx9STxyxnrJcsug5ujxvnFrqCrnenU1RLRRpNBafLOh28
      JjjwexzoFkOiIAgUi0UWZqbJ5jsr86LDhaZpNGoVSytatZSnpWrGPsAW1p16U8UptKhusU9R
      yC6hCgLVqnVB67m5STILs8ynOn+OYi7Dcq7CS6+/vcU+gI9zV08SDscsZgqNaqVOLZdBd3m2
      1Cm6Yd8iWgTRycjYGNn0Es0tRuJqKY8qOLd8YEv5AuV6HSmbtTSZ+gIBPOEEXsv6BTpKq0Wp
      UCRm4Xsu1yuk0lnCUeu053KjhiAI+IJRAiGLDTi5ji55SfTESCQ7f4be4VG6qc9Tr5RQVZV6
      o0GpXCMa6hwP6xRVnJEkji3MpS5fiHo5g89jnXt/YPAEs9NT9MQ7m0Ej8V4CgTr5Sg2/hRVN
      V+ssLOWIJRKodFreiFx9+UWMCWdzWuCdsI9WILVV46P3/4qp8XliW5QrTQ6fJOQSqDesR6ZQ
      LM7oYD+hsPVSxONxMzUxQSZnUnZ1hVoxw4Mn0xTLNXoSnR9YlzfA6ZNjaJpqaWZ0eXygytRr
      VaYmHlFumLdNTc/iC0jorjDpxS0KP3dBrVJHFIyqnnULK5WqyMwvZtDVOqWS9ZJPokU43o/H
      Yy0o83NzJAeG8Titda1Hj5/gUIpYV5wTaDabKIrVNpgAusr4kydMT89ZKrfdIezfDOBw+Xjr
      a28xPzNDZinNSAeNvdUo8cm1L/F5g1x5o3PW6Wa1wJOJaXRRxGfhWqG2muSKFZq1CrqFz7wv
      3MPrryWolgtkswV6LYQgmy+iyk0KhTwDfZ1HxZbcwu310myUyeUqBAfaBTUYjzGfzqCpOtH4
      7muwDZ8+y8DKDCuKnR9EQZRI9iZotERGR7ZwwQiEKRWyIFgryz6Ph3w+j8sbtAyPjUXDpIt1
      IlYrYUHE43FtWVxHV2VK5TrJvuAezAD7KAAg4HS5GTttrbA6PUHefudN5mZmyKQyDHWYLeRG
      HcEpUSs1kMTOSxtNbdGUFVRFxem0XrMLgkAgFMWqBHerVqBal3E5nfiC1i4Tid4e5uaXSA6d
      IRE1bxuMJTgf211Zn/UIooiji+oqoihRrdXoS0aZmk1zeqzz06jrGkgOHBZPY7VSIRAOUW+0
      cEjWj2I+n0cUBVSs19ytap2ia4vZyeWjPxld8effPUcgql3A6fJw4rR1fHEg1seVyMqIafHD
      OD0Bzp07i37mNLKlb1F3ZOeXiST9pGZqqFoeBjs/OIuLKQaHhnC5PUcyYisei5DOVkgOWtfT
      rdVlhkdOWn4GfyBAsZBDabWQWyqdDEaF7DLlWpNo2LflkiUSDVJoKmh0NnG2GmUmHk4R7EvS
      PzywyzW8cnxSI6pKk4knT5icmmIxZb0PAMbI6N5hjMN6EqOjBBxBTp1MMnbC+sGJhvw8fPiQ
      5Wxn3eOwSM1OMr+0TK3ZoFC03pnXWzXu3rtPodxZpyjlMlQqJeYXc5a7t5F4L/GIh2K2YvGw
      6SwuZTl39QVGBxKWY7vD6ePMlXM4RWv7fnc4jo8ASA43TkGjd2CIcqGz9+Fe43C5icfjxONx
      AlZFnDG8Rv1eL/XK0UsYUK81QFPQBGhs4ZtVrhQpZTJkLXx8QrEEugZXrl7E57Fearq8Idwe
      wXIGqBSzTE5NsZTOWQqApsosp3JoLesd3m45Akug7hAEgd6+JNevfcjgyaNXnVLXdWKJBNVi
      Bn9iZyVe95PRM+cYXo2q2kJniPcOITmyRELWLifhUJClhQX6BkcI+c1NnPPz8wwNjTLQG7V4
      YAXOXriMLMuMjIxYjOw6DVkjGvKhO9x7MnofGwEAyKUzXHzpNYIW3pGHRXZmgmxLoaW4aaZS
      9ESsVOuDRxDFrpYM6cUZ8lUFSRBQtogHCEViOMQ0mXytowAIapMnExNozQqnL3YuuSoIAu4u
      il17PS5CsR7CFvsd2+FYCUA82Uc6V0DUdbxHrBq75HKjNRrI1Sa+LZz6jjLlYgXR6UZwipRy
      RZLRzg9ao1Gj1hKIJzrPFAMjJ2i1WgiCtAdrdgFBFHh0/y7xnj7GTo3u+prHSgCyqSWmUznC
      oSqJLcIED5po/xDR/qHD7sauOXHu/FokmJVyOzf5hGyhiOBwIHrihDvMACDgdO7eGGGgceuL
      6yCFcTgdR9sVYj8IJ3oYc3nQxb36Qm02U6/WaTRr1OpNovGeju4LjUYTtSHjjLtXlGrrPZK9
      QeTi1Zco11TketXSa7RbjpUABEMRvP4ggnBsjFfHDq/fR7mUQVcFGrKKv4Ph69T5C6w6gR7c
      nofG+OMJdBREXz/WYUfdcayepLnxx3xy/TPu3n942F15ZhEEgXI5z8STCcoW+wCCIK5VYD84
      ARAYGRvB4XQj160ivbrnWM0AkZ4eTro9aOLRUoCfNaLRXlqam5iFAnw4CPiDEc6ej1jGIGyH
      YyUADocDUZIolcvA0bO1PyssZ/IMDg3j2SL+4eDRSaeWaLZUBNFB/0DfrhXhY7UEWg2K78Ze
      bLNzYpEQqVSKetPagfngEYhFw8w+mWQpk9mTJdCxEoDM4gLlWoPU/CSziwfnDvG8EYrEiIfc
      pHPWPkOHgiAQ742hKfqeCMD/DzdhDaZ9KmnKAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Economic Indicators (2)' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Economic Indicators (3)' width='192'>
      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
      JGzB1qPUOwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='GDP ODA Inflow' width='192'>
      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
      vtL//wEHgRz5l9egmgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='GDP ODA Inflow (2)' width='192'>
      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
      VwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Government Expenditure' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map of Migrant Stock Percentage' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Migration Vs. Economic Indicators' width='192'>
      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
      eiM9kAMeAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='ODA Inflows' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Refugee &amp; IDP Counts' width='192'>
      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
      CM9VkPrBAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Refugee Asylum (Top 10)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOy9V3AdaXqm+aQ53p8D7wECBAnQAvSuWN53VUmtabVMt0bTsVLExsbc7XXv
      7OXGxG7EXu2MWprWtEYatVF3eVbRWxCgB0GAsIS3B8ebPOn2AqwqFouoIgtkGSCfGyDOSfOf
      zHzz+837f79gmqaJhcUaRfy2C2Bh8W1iCcBiTWMJwGJNYwnAYk1jCcBiTWMJwGJNYwnAYk1j
      CcBiTWMJwGJNYwnAYk1jCcBiTWMJwGJNYwnAYk1jCcBiTWMJwGJNYwnAYk1jCcBiTWMJ4HuO
      YRis1Ul9uq6v+BiWAL7nqKr6bRfhW6NQKKz4GPJjKIfFt0z38BxrMQYUFAW7w7GiY1gCWAX8
      /B9OohtrUQIrZ/VVgYwc147/hv/yX3/P3D21Ay0X4/y7/8R//cUvOd09hbbM7v0n36Y/tcIy
      pCb56Phlsst9ryvMzSwuWwaLb45VJwAtm2FO87CpMs/g5GePYDY1zaJax5/+1U84tLli2dCn
      FxT0lb5MfZW88Ew77uW+L8xz8mgX6RWexmLlrLoqUCo+AVIlDS3l3OgfQqnZjDnXy9vvfMDg
      hMpYdJBNu5+nrVKj49RpRhaySDJ4Gg7zo6fWY2hZBjqPcXVihKTh48CLL7Gp0sNk9zmOdfWT
      10SKGrbw9P7thLLD/GvHGEVGlJGZBO6KTbz07G5C2WH+8eIiP3l5N/loP++8fZqYauKvauWZ
      /dsZOPobunuTzP1/d3AGmvnxnx4k19/FB2e7yaoQqW3l0MGd+NNDfHxjAmdqjrGFFL7q7bzw
      zA6CjlX33vrWWHUCWBwbxFP3EmF/BlO9Riq3kaKyjbz+gwJnL6g8/eYO3Ch0f/gHxKZn+ekP
      SskNneGdiaUeBcM0cBav54VDT5HpP03ndJxNlR7cxc289ecH8EgFOk+fZmY+Rcitkc1qND79
      CocCMudPHye6mCNk18kpSxWcxf5LuHf8CX/U6iUVj2N3yOx/5YdM5np44S9eJAiAhhqo440/
      24nPbnL9wlEmJmJs9OukUwpth9/kmaCdSx//jqnYVoJlK2v4WXzG6hKAOk13d4ai4DSjUzky
      84uML6Yp8gTv2zDBTLKUnS3l2EUoyDKiIAAg27zU1lfjtoPpcSOpIhg6iZkBzh95l3ReI7FQ
      YGfVVja6wVNWQ02RD4wCHq8X8b4++UjjdpIfvsMH0zXUr6unzhPkC102hkE2OsapI++Syumk
      Y3maX9zARj/4y+upDC9Vpnx+D6ZpPKGLtzZZVQJIjw0SC4Twz4wzDngcBfrHF9lefb8AJCRd
      QXnYun5yjK5xgZf+3U8JuaD3xAkSD9nx6CjewI9+3EBifobLXVfJCw7ay+/bKDPNhYE0z//w
      p0TcMsOdJxi3OnW+EVaNAEwjR/9gkq37D9JWHVr6LDvG22/fZmFXA7bPbR1iXUOBM8cu0Fob
      ZKGvn7S9ffmDizakQpLx8RFmc4tcvD5MXeXmhyrXVM8FxtQQYbeAKMnIkgR2D2W2Ra5c76fG
      76O2WMamZZiYGGFRTdHZ1U9ob8PXvhYWD4/085///OffdiEeC7qBYnNSXVqEQ5YAEGweAg4d
      m78It03C6fYTDnsREfCVVGJLTTEdzeJ1SySkCFvqi5FkO95QBJcEgijhcPsJhoso8xrcGZ1G
      s4fZvLWFskgYn9uF3ekl4ncBIMk2/P4ATocNh9tHadiHw+0kNjXGbDRFpKGVDbUlyJKT0ooA
      c3fukFAdVNXXUhOSGB6ZIIePze2bKA+HCfjcOFxeQr6lKpAo2/D6Q7jtnzWCdV3nt6f7WKNu
      iBUjrNXs0JM9HUybQQIOk8neXqTm/RxsLv22i/XIKIrCz395FsNYe20DwzAQxZX1iK1ZAWQX
      x7nZM0iqAMGKBloaq3HZvn/di4qiYLfbEe424tcSuVwOl8u1omOsWQGsFiwBrEwA379XnoXF
      Y2TV9AKtZf72P7+LvmL/xvcPwzQ/Hb/5ujyyAOKTvXRd6SOlSYRrNrBnWyNO6SEDSfwO50Zg
      5/Y67I964s+R5urxDsyaLWxtLEF6hD2NQpbRiUlKqprwPKgQmkL/tbPcuBMDQcIbqWb33jZC
      j8l+YBo6EyN9+CpbCTo/9wVjQ7eQIuuoDJkMdHTj3rqbyoeI8PPxrOUG/Zo80l01Un18eGyI
      6q17ObBnG8HsNJPpR+h98JaxualsxWFHnenn2mye6ZFeMoVH6/0w1DyTE2PklrNiGiqjc3HW
      bd7N4af20+BLcPSjCyQe8TzLYurMjg+QVO7/3GR6dIC5hAI4qGptochyPDxxHulZ1GbHSZY1
      0VRThgSUlNcAOnN918iVt1IbsIGpMNY9jKu5Hn14HLGmhFjPFea9GzlQqdA762L3eidqLkbv
      lcsMzaVwBKrZu38bIYfM/Mg1ogUXE4N9ZG2l7D/YTsR17zCWylj/LOvbWiiMDJHIKPjtLnQl
      zejUHGG/kxudfdTu30OxtsCVS93MplWKazezq20dMmAWUty8cIxYMkP5xp3s2lD++TeBZCcQ
      ClNU5CHs28V07BTJjEbALrEw3E3HjREEfzl79u4m4tCZGB8iOb/I8PgMtqJ69u/dhkdQGR64
      RbC6lYhHRlsY4HqqmLYaN6aaZeDKaS7HY4Tqt3JoW919b6ICk7dGiezehMM0ySWmuX75CtNZ
      G03bdtFaFWINtnmfCI8UAWw12ymbOcsfPjrH8Pg0qZyKaYr4HCk6Lg9TMEFLzXN1YgY7BgvD
      A3RePs+kGmFDTQhSk1wbiQKgKElEbw179+1lg2+O45cnMIHpvk46bkdp3L6LZtc0527Nf64M
      Ri7FUE5mXVkZjWGTodnk0ueFLHf6LnP23DU8jRspcUsk4lmKGzZz8MAuPInrdPbHAUgnUrgq
      mti3u5V0zzG6RrIPNjaYJkomgaLbcNgkkmO3uDyh0rZvPxtLdM6f6iKl6swM9jCSdrFr3x4q
      hTGOnh+goOuMj/QRzy7NW9Vid+geXyprNp1FCFWxb89WpDsnOXU7fd/584xe6ycBmGaOcx8d
      Qy9tYW9bI7bHMA/W4jMeKQII9iJe/uEfMdx3i+7OU6SNCM+//gwlddsou/oxk+kmvNEFfMFi
      3DYJyCL62jmwrR67AMQ/O5bLFcGmXqLzQg96foFZIUKBOpy+EO3r91FXApiV3Jj4/A3PJBcw
      BDc+jwtHQxnnz0+Q31CKBOTSCnUHX2FTmQcwkYqCjF25xq1YjlxqAbc9hl4VwFdcwbraGorc
      4NgV5eytO6j1LZ+1S1LTnProPa57HdjtDio37CDiNui7MszsnQzZ6ASGVmA+oxNLbwJvhJbq
      dZSU+ggF9jP9wVniSvWy19ETKqKkvoHSAIQPt/H7o/3km7Y+eONYDzOuNv5dawN2Acoe5YZZ
      fCWPJADTNJFdQZrb9tO4KcfQud/SNZjk1U0hapsiTI1MEs5OE6o8gCwC+Fm3vnzp4b+P8Zun
      GchUsWNvC3J2iA869IeaIRW7c41r16a5M3ITwdTI5R2MLG6j0Qbe0ioqA0u2AUNJ0XmxE7ls
      M/taPCTGr3AroX7xTS9LSJif/9wVYfPGLWQHOph3bGZ9TQSJAooqUtPaTstdr5FocxLwSszd
      s6uAjPx549GXI0vIaMtb61QNw25/pIa+xcPzSFWg/OwAN4ZnyGsGGAqJhIHLtXRrysprWJy5
      zp0ZB7UVPpaeeWHZumo2lSRc3UBJ0EN6YZ6c9jChPc3YmMFbf/O/8bd/8zf8zd/+r/zx01WM
      D01jwNJg0N0TGlqBrC5RVV1J2C2yMBv9VGCmoaMbBmpmnpudg/gbKz/fKyXbCRdXcODl16gz
      RjnV1U/WkCmLeJicnscVLCIS9JBPxynoApg6qmZgaDnGbl0g49mA3ykgmJArqBTSC/QOTHx6
      eNMw0A0dLR+j+3Q33pY67u0Q+hzFTQTnrjI4n8ZQU8wvZizfz2PkkSKAzeMn2nWSfzqexJDd
      1G7cycFaLwCOcAll+RPM1L5G0AYg4PT7sInCvQcg4lvq2qho2kzf8X/hH00f65tKKIv4EAGH
      J4jwSalsboLuz16nRmKGeLiFnf7PdBuqbMZ9e56CWYvH40W6ezrJFWBDhZcTv/tHTE8ZjdVl
      RGQHgmTHqcZ5/1//Hs10sG77fg7UBfi0lIKIz+fHLouIjhDbDj3NjQsXuD7oY+fGnWzPnuXX
      v/w7DNnLxp0HKS4DMvOcef9/clKSCNds4rnDjThlgab6Kk58+M9cchWxvixC2GMDRBxonPr9
      f6Ogy1Ru3MFzzSFEwcTt82OzS4CJNxJYEqUYYd/BZs4f/w2nc3Za9jxNUcjzKLfN4kt4bFYI
      LbfAmeNXaX76MBXuR6kDfM8xClzqukCkuo36Ct83fnpFUfjx//l7axzga/J4RoKzY/z+12cI
      bN5LiXOtDS4LuFwe7PK35yr5f//jy2syL5CiKDhWmBfIMsN9z7HMcJYZzsLia7PW6iurkv95
      ogdzDbYBVE3DJq/sEV52byWbQpdcuBzyUg+JqZNNZpB8Phzitx9uDU0lk8/jdvt4GC+ell2k
      60ov9VvaCcsFYok0urk07dHlDeD3OJZ3FhoFEikVb8CDaOikUkmc3iB2aQXXwTTJppOYdg8e
      x8pu4r8e77EawV+TZR+dyd5OLvZMfJrCwyzEOHnkNNHCd2MoXknMcPrMGdIPlSDYZKq/E8Vd
      T5FPZvzKOT46fYZLly7R1XGeIx8eZzSWW3733BQfvneRDGDoKpNjI2SVlZrjTKJTo8yn8is8
      jsVKWPbVU1JWxpWeaXSzFlkQSC/Mkg9FKLZJYGgkYjFyqo7TG8TvcYJeIFfQMAo5snkVmztA
      0OdCxETNp4klM5iig2A4gEMySUYXyKp31SU6CEd8qNk8drcbmySiFXLkVQGPxwmaQjyeQNHA
      7Q/ic9/nYzZ1MskE6VwBJDv+YACnTfq0b9/IjHG1X2LvW+XIgg742HJoJ1vLizANhZ4TRxib
      TVAfdqOreeKxBKop4PGH8Dpt3PueFyUbNXWNOBwC2Uwaye7CYZMwTYNsJo3d5cUsZEikMuim
      iMsbIOBxYJoauXQBmxPiiTy+QICiqnoEuwswUfMZ4ok0uing8oXwue18BwLtqmdZAXiLS/HE
      7jCvGZTbJebnZolE1iGJOnO3r9I5NIOhaah42H7gIJXGFO+fuIDbHUTXVbKKzP6XXqFUiHK1
      6xJzaRVdyeGp38PhHWWM9VxhKFagkI4yEnfzV3/xLNeOX6L5mcPUBlzEJru5PODk6Webmei5
      zO2xKKqmotuC7Hv6MIF7C5ue4eKFayQVFUM1CNS0cqC9GYcEYBIfHUarbqDEdt8TZRrkEvNM
      pQzKfS4wsvSeP8HNOQWnbKI5Sjh0aDcl9+ym5dOcO/E+mw//MdOXz2DW7qC9oRhNWeT8sQ42
      PfM8yd7z9E7lENDI60W88OZhfHqMjg87kEtl5jI+DuzZzsiVo7ibnmFrjZ07Ny7TMxlHEHR0
      W4i9hw5Q7ltD4ynfEstXPu0hNldmuDGcpWyDi/nZeUrbDiDkoly7k6C5tQ2fU2Sq/waDg2OU
      Nci4wtXs2bOXkEdm4MK7zMUVxMIwKaGM9p0VoKa50nGByeYfs+nQy7RqWW50nKZ+zw4izge7
      XQqpRUbnkjRuacdvNxnv66J3YJZd93rNXBG2tO1EN00KyVmuDo6RKazH4RIAnVg0S6To3tHT
      GGd+9890yDYER4ANW3ZQV+wlP32DnnwJr7/RhkvS6D37MbdG5ympe0DBRBv11WFOTy2wvaGI
      3GQPmVALRR4bvqY2AjUGmCoDZ44xloRWj8Hc9CTVm17m9f012AWdkc8uNhVNm/DVamBq3Lre
      xfxCmnJf6FHupcXX4EtaXxJVW1o599EtMtURptLVtBTZURfTTE8Pk8qm7zY+Zco3+hDIYXf7
      8DqXQrfdbsMEMtMj9A2ZpBNjADgiVbhFwCgwfr2DWXcLz64rQirEHlgKJRdncmiQaCqPTQQk
      J+vq7fCZs4ds9A6dF3opIGAUskzmHezRNMAGmOiGeZ8nKcTBP9rL1vIIhWyMK6dOct3jp1mN
      4gk34rFLgER5qZeRVAF4UF1EIFRdi3zpMnOFOqZuzdN08BCinqG38zRjWQlJgPjMGOtSgEeg
      pHo9rc21OETgniaEqSTpudbBZEJDwGB+ZgG55v4ZMxZPgi/vfvA3Umn/HT0dU8hNT+EVwXS6
      8HjK2PP8C1R4HehqAQ0R4e4Dfj/OQCl1jSU8f7AVu2hQyBeQHCaL47cZSPvZu7dyyekoCAgY
      6IaJqWtkM3l0nNjsHvzltex5+kVKfDY0VcFAxkh9kvpcZ6Z/kuDm3eyuLyMfHePI+e57SiDh
      8chk8w9aSkjA5vRTVeLiRraAtyhEZipKVq3FKWnMzWfxhOzAMssQOYrZ1qBzo6uHuFzDWwEB
      LT/HfLqMZ1/fg5cCN49Mkrp7LlGUeVAam0JsikmjhJdfa8dmKlw6eYTvRlfD6ucr+t8clJa7
      ePtolB/+xyXDmOApYk+Tm5PvfUAw4EQ07VRt2krjMgNyJTXN2PpP8cEHozgkEae/lG1bazh9
      5COi/vUUjs2Do5i9+zZSUyRx6eRRbjttpBdnEIrbcQaKaApLnPjoffweB4LsonFTO1WftoNF
      gmUeLl+9yEcDHgQtzd05Mp9+X1pbQfzcFLlt1SwVM03P+VNMud2YhkYypbPtmSCuojAbB47z
      7rvv4bGZ5PBzcFsRML3M9ZGIrG9h7L+8S/1rP8QmgCb6kNULnPwohcsusjieoGoZq/+nN8ET
      wpXu5ejHURySxNR4lIYqIB/n6rVR6vdsJUienkvdlGzYTrHXGr55XHylFaKQS7AQ1ygtCyPd
      rUeYhkpsfo60oiM7vYRDQeyCSjqv4/W4EQVQMgk0mw+PDZRMkoVYEh0JXyhCwAVz0/MUPum7
      lpyUlhUha1nm5mNogg2v14Uo2PH5l3qBovNRcqqB3e0jEgogmSqpTA6vL4BIgcX5BTKFJUel
      JBh4vX5sn/TTG3muHXsXfcMrbK9yoWbiLMRSSwthCCJuX4iQ340kCuiFLAvzURRDxB8uJuC2
      IxgKsUQBf9i3NA6QTODyhbFJYBoai3MLOEJFeB3yUm9QIkoslUd2+fBIBQRPCR5ZJZ3M4w76
      liKeaZJJJRCcPtw2gVwqxkI8g+Tw4nVJiHY3XtlgfiGFv6wIBxqLc4u4QkWfS+BlmeFWxprx
      AuUWRzjTNUHbwT0UrSK3qqIo/OvJPtbi869pKvIjzT76ImtGAKahk0qlcLj9OL6HKRCXwzLD
      rcwMt2Yqk4Io4Q/cv06AxVpnzQhgNTMfX3Y9ylVNXsnjzK/MkmIJYBXwt//5XasR/DVZPZXh
      J4SWS9Fx5ijRT7xyRoFbXecZmE5AfoZjF/q+5pENpvsv0XVr6nEV1eJrYEWAr8AwdBLxKOon
      I1OmSTqRwF6ig6GwGM98zSOLlK/fwf3LhVl8s1gCeCyYKKl5Ll/tp7FtB7nJAQq2ILHBC4y7
      tvCDbREunT/JzTsxJF8xT73wCg1FNiZuXmHBWcX2xjImuz5mSAyy0HeTRSPAvmefo6XCRyE5
      zYkjRxmLF6jd8hT72tbhsYkPNGdYPDqWAB4DucVxLnbeoGTrsxR7ZW4npuke6qN6y35e21CB
      nl6kauthdj0fIR+9xcenr1L61i7yqQRJvQSAfHySSXslL7/1F2gTXZwZGKOluJKu8z00P/8j
      XvDD5RNH6B7ysqe5/MH2JItHxhLACsnfucgv7rjY8tSLbCx3IaCBKVK0rp1drZWIpokqG8z0
      nOfI2zNoegHTUU/uPnuRIHrYuLWFoBtyXj8Oh4SamKdv5BY3R4cBKGQLVLo3gFVxemxYAvgK
      RFFAFEQ0XQOWrA4FQ8MrLdm3nXW7eHWjyOkbt1lcV07EAchuSoL+uz0MBoM918j4W/n3P3sD
      tDk++u15Hm69awFb2Vb+8q3DK1xPwWI5rF6gr0CyOynzyly+2sNiPM7EwFUmU25Kwt67WwiE
      azazu1Hm3OlrJAv3d0eaGLoBGKRiM9zq7GDsIbvtbcESGoxRTly9w2I8znhfLwMz0TWZA+hJ
      YUWAr0CQHGza9xxcusDHH/RiD5Rz6MWnKHJLUPDRWCuAaKOseQ8t+g1iyTyhkjIMl/OTA7B+
      0zYSHRf56JTEuk2t7HdlcEkCQlkVgn1JSP6qRux3czzJnjC1ZSLIAfa9/iadJ0/w8W0Ff+V6
      dlX7v6UrsTpZM16g1YqiKPzt//0hur721gk2TXPFHihLAN9zLDOclRnOwuJrYwnAYk1jNYJX
      AT//h5Nr0gxnGAbigyZZPwKrRgBaPslQ7y3m0ip2T4TG5kYiD1wI+NGITQxByTpCyxzK0BXG
      b99kPJpBdPipWddEVeThFrDIJ6IsahIVkZXNU+genluTAngcrI4qkFng5ukPGUrZCIdDCJkJ
      bg4tfI0D5eg5efxz/fSzvVeYXjZ7ocHUteNcHM0TCBfhMhNcvXXnoc+WnZugf2L2a5TT4nGx
      OiKAOs3QqJv9f91OmQSw6dOvNCXFcO8t5jIGRdVNNFZFkPUUQ6NpqhsrsKMTnZjC8AVQZm/R
      deUqbtXGhM/PxratS+7PhTGu9E6g2EK0bGwi4PrksqUY6onS+uZLtPqXemG2L52VuaER5Oom
      wnbIx2eYydupKwtj6gXGbnczsZglH4tTqFgPmCiJGW72DpNVoah6PetqihHzi0wlVYzoBFOx
      HOGaFhqrw8hrr8PnibE6IoCthLqSGB+/f5qxhSQFVcM0zaXMbB1HuTVv4PfZGbx4mptTCVDm
      6erqZyn1lMZkTw93ollcHj9ep5NAKEI47McmgqpE6b4+iOD0os700NU/c8+JvTRs8HHu3Q+4
      NbZAvqBimCZQ4M7lTibvziHIzA5xbWAKTI3xK8e4eCeLLxTGZePugncqc6NjFOx+wiEfI90X
      GJpOoiamOfrBe4wkBfxBL32dx5mIP8xamhYPy+qIAIKL7a/+CZHeS3R8+G/k5RA7Dx1mo3eG
      q3MlvPkne3EDTQGV3/SNs22P+4vHECUilbVUhEOE1rew4e6Aq81ZxN7dz9Dih0wgx5nFe1NW
      SVTteI23iru50PEhFwt2mtsPsHfjMnX6zCRdkz5ee/MAbmDRrnEjC2CnfF0jsd5+4nENJZtl
      fjFJXRGUbtjD03tbloqYmiSTV1ktt+27wOq4kqaJIDmo23yAmo07mOs7z4eXBli3RybrcuEy
      AQGcbg964XG+QU0QRIrrt/F67Sbikzf44OgNmjceevDmioIe8PGFoZvCIh3Hz6OXVxMJyeTm
      ZlBU603/TbA6qkBqkpGRCVJ5DUQZu11GMk3MUAXVmTH65jPomsJg/yjh4iBIEpJaQNEMlFSc
      6bnFu5lGRSRJJZNRMA39IXLt5JkcGiWaVjAFCbvTgWAaCIjIso6S19DVLDPTU2RVwOXDPn+H
      0Vgew9CIReeWbNGZGONCmN1tW9iwrgobhmV4+4ZYHRFAMFkcvsrJ4x+iGQKucDk792/DYfPS
      vrOa4+//M2cKEKho5qmnKsGhs760k9/84u9wBUI4VImQIAAOaltrefcP/0CPv4rn33oNUZI/
      nXwiiBLS5/qdBZTYHU6c/picZmL3Rmjet5cQDszWWn77b7/gmsNLxAdSiQjuEg60l/Per3+J
      IroojQRx1ongLaXVc5Nf/uLvcHmLCDrseEUBQRCQ71n+RpRkzDVoeXiSWF6g7zlWasSVYQng
      e46iKNy8E2Ut3kWlUMBhX9lgpyWA7zmWG9RKjbjmUbW1NxcAQNV0JHVlKylYAlgF/On/8Rur
      DfA1sQSwIkz0QporJz/kxmgMyV3M1v2H2F4Xeai9U1N3GC3Y2FRX+YTLabEclgBWRIFbH/2B
      uepn+cmzpRTiE9yYiAMPJwA1k2Ah63yyRbT4UiwBrIgCiYRB5Z4SZFHAFqlhbwRAYeBcB/Zt
      T1HrgdRkL7cSHna3VGOoGS4de4/u8QSmJlO0Yz9gkp66xftHO4jnTeq3PcX+9kbkxDg3ZrIY
      Y93cHI9Tvf0FDrXV4LAWEH5srI6R4G8NH1sPtnD97V/xzrGz3BqeJq8agE5scoLkXTdDIb3I
      dDQJepYrR94jWXmQn/yHn/HawRZ8MoBGOmfn6T/6CT/72U/xp27RN7yArqTo7urCu+kFfvLX
      P8E+dYbh+cK3+HtXH1YEWCHe6jZ++GYFo2MTDHR+RO/ELt46VPvgjdOz3JHqeWNzBTbA7nAh
      6YApEwzKHHnnV8wmC6QTCq1F29nohZL17bRULS0LXlwcwjDWZo/Pk8ISwIpYctl5whW0hCto
      aani9/+ti5nlBKDrqJLIF5YEz07ywdEe2l/5MVUBByOdJxhfg2lOvg2sKtCKSHHjbCcj82l0
      wyA6PkrU5SaAjN1RIJXMU8jF6O2+STwH+CIUx/u5OpZE1xTGhm8vfa4WyIoOAh4bamKKq1cH
      +LpJ1y0eDSsCrAgvtfV+Th39DUfTKr7yZl7+wSE82Gk5dIi33/kVvyLIhg3baPYFwBbm8GvP
      8PEffss/5Ow0t2yiocwHwVJe2jrH7375D9iCNWzZtxfJ60ZySpRHPmvw+iPlmM4vxA+LFWBZ
      Ib7nWGa4lWEJ4HvOJ16gtYjlBbL4lLVohhMEYcW/22oEW6xprAiwCvh/ft2xJtsAuq4jSSvr
      FFjzAtALae70j+KpWUeZ/zNfTnZhlP55nab6GjzO7/ZlOnNjbE0K4HGw5qtASmaBqx+/x8m+
      6Xs+LTB8/gTvne9kJqF8a2WzePJ8t19t3wgSJc0tRMcHmd9eT7EN9MQoA3otW6vSYOrE52cR
      PCECbjumobMYXcDhi+AwM0yOT5LIaTj9JTTUlSGbOvHFWVTVYH5+EcFdRNO6CmTTYHF2nFxB
      ZTGew1taTURIMDmXwBYoo6ayGDsqi7OTTM4nQXZS3dBIyCWSScVQcWEkJ5nTApUNG5kAABms
      SURBVDTXFK3JRu+TYM1HAADsxWwoz9A/lQMMFsbm8NeW8UmFKDrSzZWhpRyeRiHLjcsdxPMa
      0ekRRsfnyWZTjF0/zeWxNKZe4Mqx33K0s49EJs1w18dcny5g6CoXP/xXOvsmSScmOfXO7zjd
      PUoileLGpXOMRXOo6Si3B4dJZ7Oko0OcPd1N2oDZsdv0dp3meMdt4vcvL2mxIqwIAIBAZH0z
      E1f7yJY3MxpTqG8IMzwPCBL1G9Zx9egQqdZqxMQgWWEdRQEHsnMdBXOSeKaAFJIYG56jvaIc
      b0ktTdufoTogoEQyfBTNsb3YSaC8ifZDBylxxsj0nqLx6QPUiSbdl0+j51RsRUW0rG9iYj6O
      briYmeolkdsKWpzeKSc//vHzOMWVd/1ZfIYVAe7idJchC7MsRJMoqkgw+Fn6RNFfxdZQjFsz
      eaKDdwi3NOIwNAaun+f6wBTpTIZcroCSyaIDgiAiieJ9/dRL/wuffI6AKN1d8V0AAZPkVD/n
      Oq8TS2XIZrLklDQFFZACbN7WjPPuvhaPD0sAd5FcHkrdDoYGulADzQTt914aG5XbWol1fsCl
      aAWbq5yYeoHFVJ5NOw+wu30rdWWBFV/M6OIiweot7N+zi83ra/k0CbUgIAmCtTr8E8CqAt1F
      EGzUVfo5/94we/+8FJHc5753eirx5I+Sqt+OVwBTshP2SJx++5+Q3UHC7iyGULOiMkQiIa6d
      OMl/77ERiJShrCzhgcVDsOa9QKZpYOgmoiyBoaNpBpLNhoiJpuuIooQoChiFFB3nL1LRspe6
      Eg+YJoapo6k6piAgSSKYS38NQ0cQZUQBTENDNyUkEQxdR5RkBMFEU3VEm4xomuiGgSCICIKJ
      rmnohrm0HcZSakbTwERAFMUvBAHLDLcy1rwAHgZlYZiPTl1AKNnKM3tbcX+HVqhQFIWzNyfX
      ZGa4glrAbrMywz1xTEOnoGqIsg1Z+uJb+NvEygxnuUGfOIIo4XBYE1FWI5YAVgHXh2ZZiwsK
      KAUFh92xomNYAlgF/Kf/dspqBH9NlhdAcpxf/fpt0qqMKIlEqlvZtXMbVWE336XqpqEViMaT
      BIIR7LIAeo6eC1dxtGyhMexdfkclxbF3/gc3ZwycdhmHO0z7wafZWPN4VmE01DzXOk9StuUl
      KnyfKzCdZ47gWXeQ1iqRGx9fxL/vWeoebmlhi8fM8gIwDZTwBn72g6cRKTB6vYNT567wx6/u
      wyV9d8bP9GyMjq7L7D34AkVeGSQXrQf2PcSeJqq3kjf/9BlqI07ik30c6+qgrPhFit2Pp76v
      qeoDllky0bXC3Te2ly3PP/tYzmXx9XioKpAoOanbtovY2Nv0xnTaglmunj1J99A0mj3M1n0H
      2d4Q4PZHxxmUVWJ3ZlAlP80bKpm43c9iVmTvG3/C9go307c7Od1xk0RBpKh2M8881UbQrjN0
      5QwXro2QF91sPfg8G4MaNwYG8IoFrg4UeOH1/WQGujh3fRhFlyld38ZzB2rpfPsdLg9Ncmd4
      jEDtZt48vJnu852Ute1hXZGL2cHLnDp3k7gq0tj+FPu31POF9qwg4i+qpDg0gaoa6LkEN7ou
      cK1/CtMZZOfB52mpcnHt4glmZ9LMLUQxPCUceOEl1gVMzp8+Sk3bS9SG7WQHT/Duwnp+2B5B
      Tc9z/sNfk4jFsBc18Oorz1D0uSprjFO/PE/DT1+lyjQYu3mWjiv9JDQ763c/x+FNFY/tRls8
      mIduAwiim6pKgRtxk1TsOgvBbfzor15Fm7/NB5f62FizE62Qw1e/m+efKmO04/dcjrr4wZ/9
      FdLISd6dSLG9KM3lK3O0vfZjGvzQe+oDLg7W8lzpLF1jMs//6KdEZJWMakJ+ken+m/g3PMUb
      P2wmIBss1m7lh1uexiUWuPrx7xmObeXAD14nfe6eCKCm0FR16Q2bnabj2hw7X/sxNX6RdFZB
      elD1xtCZH+sjrvrxuURmBobIh1v5y79+hfzCEGcuXaa8aB9awaB4435eai4heucSZzu7KX92
      E6qq3F0fGExdRbmbr98UXbQceIWWUonRzvc5e22G13cX33NiEzVfwABMdYZrN+Ls/sGfU+01
      SGS/O1F2NfMIjWCdVLKArURjsneQawM3GL4oAgYFWw15cymkV9YU4ZQl7O4AZc4S3DYJ0eWE
      BBAdZSa0jlciHkSgpbWGy91RFnIDBJoOU+K1IWAj4IRMfhF/ZTO7t2/Ebxcx1CwLw1fpujVG
      pqCTy6bYsT4LxcuXODc7Rq64ibqICwEIBO7rMYjd4Xf/9Au0TJqSLU/z5nM78Moqt8du03n7
      IjfO2QATKVxPu6aDw0NJyIcoSgTLNxLoPUZG2fSgUwNgd3sJej2IElRubaX7nQnyux9cYGNm
      gHj5ZmqDLgQBwoGHvzMWX5+HFoCRi9IbDdC2T0YZtrP1xT/ihfX3tu4UJr/qIE43zmwWxQSX
      APlMBtkRwe31kUvl79tYxOFyId9dlTG7OMNozMYrP/4rwk6ZvlP/zPxXjOHZ3G7MvIK+3A8N
      1fHWsweR567TcTtF1hAJIGBzhNn96vPsaSr9bFs9z8i910NPoapebA95BfV4DMXnx7bM94LP
      jzOdoQCsrGPP4lH48tuXizMwMICIznh/H57mdkqdNswtWzj3zhE68q0E5QLTKZkD7Q1ffbbg
      eja4fs/JsyJ1IYGBnhhtz+7GG/Tj+90JTgutlDhAChZTdl/afFEW0fIJxoYHmcgtcLV3joZK
      kOwOPIUMPbd7qSwpoab4s5FBuXg9Tea7HD1rUBexY9h8NNRVc+8UX0G0Udmyj8Pua5z68Bg7
      Du+nfl0571w4h73QilvIk1QkNjQ3gppmbGSI/CKMD/Th3/QiQYeIRxYZGegjN1lg6FofNGwE
      wMinGR2+TUqM03tjnC2vvrmsAET/RirM33K2Q6MqCIq9ki21XqanE4Sqy3CiMTc5i6eoHI/D
      qh49LqSf//znP3/gN4KI08wzM79IOlugunUX25rKkAUB0V1MVbHMwvQMybxAVX09Eb8bm92B
      NxTEKYqIsg1fIITf40CQbDjcfsJeF0UV5WixaeZTGnVbd9JU6kOUPFRWRUjNThBTBEoqKgl4
      HDhcbgI+H6IAstNDwGEyPT2P4Ktia0sd4XAJfo+L4oiXxekZMqaTsqIwLpeTUCiE0+6kpKoK
      bXGS2YRCqLSKiN+JKACCgM3xyXY2XIESIi5jaf3eyhqqQzJTE1OkFIHK+iaKfBJTo4MkUgVy
      BY2ixna2NxYhCRLBgJfE3Axpw82Glo0UFxdT5HciCybxxQWSOZGGtl00l3gQEJBtDoKhMG6H
      DZvTTbAkjFOQKK+qIL84zVzSpKSinJBdY3RkFm9FCQ5UJkbGsAeLcd9j1dZ1nd+e7luTXqDH
      geUFelj0PBc7L1JW305t2ZeML3zDKIrCf/rHc+hrMG26YRiI4sqioSWAh8XQmJmdxe0vwe9Z
      riLzzWOZ4Swz3DeDKFNWbi1mt9qwWlMWaxorAqwC/pf/69012QYwTXPFVT9LAF9BZn6Qcxdu
      kCwIRGqaad/SjP8JLFIR7b9ArGgvjSGTsd6rKJEmmkp9X70jEE1mLTfo18SqAn0JarSf94/d
      orb9AIcP7SGiJZlNpZ/IueJjNxhPLv1fWt9Mddj95TtYPBasCPAlZBfnyIerWV9ZggAUlZTf
      /cYkNdXLmc4+CrKf7fsPUhNyoMYm6J/PkR7rYyoNG3fsRZi+ya2xBBWbdrOnuQxDiXPl/AXG
      FjO4i9exa8cmwu7P9yrNTg4jhRupDNtJTg9yvrOHtCZQv3k/W5pKsK29Dp8nhhUBvgRf9Xoq
      kj385v0z9A6NkcgWME2T/GwfH10YZt2OA+xqLeHysY+ZiBfQUrN0dl3Hv24Hu7eVc+Y3v2XB
      WcvB3eu4c/UWacBMRTFLN7L/0FPUynNc7Llz31lNZsYGmE0qQIGFBZUNOw5w+NBuYgNnGZzO
      rMXJX08MKwJ8CaKzhMM/eJOhW90MdXdy5aqPA8/sQxueonjDVpqrSsAI0TQ6w0w0RsQG5c1t
      tNSXo+YFqsunaV5fT7EjSpEUXcoaFyzHdfscHX1J8ql5oqHwl5TASUWFh7Md50nmdRYW47jX
      ZaDCmj3zuLAE8CWYpolo87B+2x4aNykMXPyYnqFZGjVzKQ8QgCAgS9JDLmCtM3bhCKPOVnYf
      CKHN3ebj0eWzX+mJcY6c6WFj215Cbomhq2fRdCtb1uPEqgJ9CZm5MXr675DTTDANUqkcNoeD
      0sogkwMDLOZ1Cuk5hmbihPz+hziiSmy+QMW6OopDXhIL02Tyyz/QWi5NzhGitrIYv1xgajqK
      9vh+ngVWBPhSHG4Xme5z/I8zH6OLTmo3tLNnfTl+Wwl7Mh2886u/R5W9bD/0PPXFbvQ5F373
      kplZEGT8ocDd+cUyvpAXEQfr923ind//kiuij6Z1ZVSWLAnH4SvCdzfHk8cXRLJL2Ivq2Ba4
      w3//+7/HHamjuq4O73d8tZrvG5YX6HuOlRpxZVgC+J6jKArRVOHbLsa3gqLkcTicX73hl2AJ
      4HuO5QZdmRvUagRbrGmsFtUq4F+O3XxA/qHVj6apyPLK5mZ8iQBM9EKO6GIc1QC3L4Tf63pw
      WpEnQD4dx7D7Pzf9D8DUNRKxBUxXhNA9E1N0NUdsMY6KnXBR5Au5f5R0HEXy4Hc9xsksWp6F
      xRiKaoAg4vIECPhcSOI3Wx359clbViP4a7KsANT0Ap1nzzCr2LBJJq5ANe27txN6pHTseYZu
      DBLZsIngI6ZxH+p6n0TtG+xr+Pyop5KY5vTb/8R85Vv8+xebP63Dzfad5VRvlkhRGe0HviiA
      1MIYC/b6xyuA+DD//G8d1FeWYJomuaxOy4HDbKoMPr5zWDxRlhXAaE8XMfd6XnmuBYcEBUVB
      kpcSP6USMTKKgcMbIOR1IggaqbgCgkI6W8DuCRDy2EjGp7h+sZNab5gqn4tQJISeTSA5XaRj
      CWRPAI/dJBWPky0YyA4P4ZAP+UveoInoOJ71z+CcGmRKWU+V3SCTjNPf20ek6U22VLrxigqJ
      tInXphNLZvEEi/GX1OKS3ICJoRVIxOPkVBO3P0TQbSOXTpBI5zAFGV8wjMcpo+ez5A0DNZMh
      r4E3GMHrkj+3PoC9bAOvvbYP09RZ6LvA8YExNlUGMQ2NZCxKtmDg9AYJeF2IukIiV8BUskvn
      DoTxueyg5UkqBkGvG0yTXDYFNg8uu5WS/UmzjABMpmamadj9HE556R3rcC61tqf7L3O1fwHN
      UMnm7Rx4+UWqfNO8+w/H8GwsQ8hniGa8vPqD3UwP3GZ8fo7stcvEi6to3x1i+NS7pCI1RKcz
      bNi5h3JhkguXBtAEESWXZ92+l2mrXs4HrzE7Mklkyxv47R9y506CykYXc6O3GZyIYujXMBdL
      2LEtzNHz86z3xxjLOth54Dly1z9gtORVnl5nZ/DyaW5MprFJEu6qVp7fHOZm10Wm0gVMQ0cO
      VPPUvnZyg5c4cmuGYo8HRUljeBt47umd+B4QRARBxOf3IM3LgEF08DIXbi+AoaGYTtoOHqSB
      Cf7tyHWqIh6y+Rw5gjz1zCECyX7e7c7xFy/tBky6Lx5FbniGtjorkjxplhFAhnzWidd7f70l
      z9DNCcq376bMIZAa7ODcrTl+tBs8RfXsObSPIqfGtbdPE5fdbNmzj7mhJE0vvU7tXXt7OrFA
      LLiN517ei88po+UlduwOo5smhfHLnBtdXFYARmaM4XQ5z5TY0bVa+nuHyDe2Ub9lH23j3dD+
      Om1lQHqAzOwQWtPzvNhYglOGobvHUNJR7sxpHHjhNUrdIoqqgyzQtKWNKlXHVFJcvtlPPKvi
      QKa0YROHtjYjaykunD9PRuFzAjCUFNPT06AXGOiZpL5pD6gLXOqN07xtGz4bTPddoW94ioYG
      cBbVcvCZHdhFje6zxxmZmGfbw7goLJ4IywjAg9OdJ50uwOdEEOXO7Sls8lXGAbBTs8EGaNic
      XrxuOyImdlla1rLrDpZStaUFv3OpIjE/co2OW1EkWURITTLnrwFqH7CnQXSgl8G5KPL7cfR8
      iuG4SFt2C64HvJK95Zto21DG/ZWIQiGGYRbh99oQAKdDQk2M09V5hawqIBgFhhfytKoqDkTc
      Ph9Om4SuS8jyF3uNtdg4HWdmuN03x4E/+xnb6kMQH2B0bpLCdeXT7UoqfUACyeHCIYuAjUgg
      QEy9PyOexTfJMgIQKCsu4fbAAOuKNmKXQFUKiPYApTUhqva+wIYiB4aWRzFscN+Sop8hAjq6
      ZmCaAiAgCkurLn7C7OgETQfeorVIIjt0lsnBBw9NmFqG25Mmh57aR4XPCagEL11nPJ6mxBf6
      4i+Q5S88/AB2ewhJHCeVVnF5JAqqTmpiDKN0I69ua8TMLvD+iXNfcsnuO15ZC2++1s7MwCXO
      dl9jpmQflS4vZc4wW555iRqPDUNVUJEhlQDTWEqkqyvMxRK4KxsQhAymoWOYJoaaI5tTsYLC
      N8OyjeD6LbuZPX2Kd98bwWkDp6+Stl3baW4p49yxdxjyeRAFqNx0kK3LLo/rpqgELh55h7HK
      erbv3PKFLTwBF1fPHGHC60JKj1JwPNgfryQWiQlODtbVE3RJgEkwP857Q3Nsr/6iAJbD4Y1Q
      UyJz7ugHOOwyrrIN7KkIkTl7nY9mh5EElYlojs0PfUQQJAdlzXvYp13g4omz7H32ADu3+Tn+
      hz8QDLoRBRuVrTvY6oXcVB9HPpxEV3Jo3moOVxdj1wwi+V7efe8DZNFkYjrNjlYgH+PKlVEa
      9m0jSJ6bXTco3dBGsc8avnlcfIkVwkRXMswvxFFNAY8/TMDnQjAKJGOLpPIast1NJBLCLqkk
      4xreoBsRg1wig+jz4BBF1FyS6GISbB7CRSG0dBzZG+ST7n1NybAYjaEKdgJeB3nTTpHfRT4d
      Q7f58dztz9TVPJmchsfn/XQswlRzxLImoYCbXDIKrghuG6ArxDMGQf9nw+RKOkZB9uNzihha
      gfjiItmCiTsYIeyRSC5GSeY0HG4fdtnE6fIhaTnygg2v045p6GSzGewuP7ZPQouWJ5rRiQSW
      umpNQyURS2L3h3BJOvGFBTIFDdnhJRjy40wM8S9dcxzcVIsp2AgWFeNxSAimQS4ZI5rMITk8
      uB0CNpcPt6ixsJjGXxLBjk5sfhFXMILT9lmUtMxwK8PyAn2TRPv59U2FP3nqUeLLl6MoCr85
      fRtjDQpA0zRkeWXR0BLAN4mWJ5YzCflWZuC6F0VRsNm+O6kav0kURcHhWFkyeUsA33MURVmT
      TlBYyowtSSsbLLRaU6sAm822JkXwiRV8JVh2aIs1jSWA7zlr8c3/CY/jt1ttAIs1jRUBLNY0
      lgAs1jSWACzWNFY36CpicfwWPYPT2MK1bNrYgNcuQnKC/lyY9aVuQCc60k8q0EBd+Lu4GrHG
      3Egft4ZmljLgSXbqNrbRWOZFzye4ffMm02mo3bCZxrIlu6CeTzDQ08NkyqSmeRNN5QHQVWZm
      p3GHK/E7JXQ1xfDgNOXrGpeuyT1YEWBVYKLH+vj4VD/usmrM2ZucvDSw5A+KD3N9PANAbmGU
      01cGsX1X86trCgMDd7CHyqivr6e+toaQ146p5bh5/iQjWSfVxTLXjx9jOKFj6nluXTjJYMpG
      dbGN7hPHGEromIbK2Eg/sezS/5M3znJrwUR+wIR2KwKsCjQGO69TefgN2qucGDVefv/hTVJ6
      I5/OKTMVursuU9r6FOVfmOj03cBQC+QkO5samykLfGbvyCcmmM462fvcdsJOkbDtBBdujFG6
      zcFkys6eF9opcooUO7KcvjZK7b6yu3uaJCdu0jnq5vk3mnnQwj6WAFYFOeaiHqpLlh4a0e2j
      tFBg0TQJAoVcivFrVxh3tfByYzHfcNKKh0bTdFKj1/hN/whOu4uaTbvY374eQ0sgUIzLsVRh
      cUbKsd9eIKt7wSzGffdzR1EFjpsLKJRh6irJxVkG+obZsOt5Ass4JiwBrApMdNmB85MKrSDh
      tIkYd+fljd84zREtw/o3duOSv6NPP2D3FfHWX//vgImWT3D5xPuc6nKzpxkk2f6pcEXRgU1K
      YGIi2Ryf2uMF0YFN1jGBQmyKawNz2D3FbAkvv56C1QZYFch4SBNTlh54U8sT08B5N3/Fut2v
      8Jc/fYXE5VMML+T5rg59mqZ5t2wCsjPIhq0b0Gbm0LGjq0lUfangWiFOHhc2HOhqgsLdz3Ul
      Tg43EuAoquXFN/6YPTVw+foQ2jLLN1gCWBW4adrs4sa526RUnehwP7Pe/7+de2lJIArDOP6M
      zqSCypSMFBVqdLECM8OiUCiMPmebNi2qZauSTEIq6EILsQuZGASFZmiKo20sCGwt9D6/z3D+
      8HJ4z9Hh/dmUVGDTA1gOeXGayqDy12nosXr1GTdXd6jUm2g1PpC/fYTV8MDlMKC1n/BQfIdZ
      LyF7noNzyg+X3YBNKeC+UIbZKCN7loUzGMD3d7mKpQ/T0RXoLxdI515hdgmfI9C/oECfiGEs
      v4/tzWOo7mEsxuLQLApg0WDr3Pp4AvNYejtE+rqIjchI1zfTvaSqDpilS+xuHeCzaUG/bwaJ
      +CjsdgXhUBDJox2c1NoYmowi4XNDtbYQnptFMr2HTLWFwfEFrPvdUNo1qFpnZNJ0RFZjOExl
      UDDW4Bv4/RaDu0AkGkcgEo0BkGgMgERjACQaAyDRGACJxgBINAZAojEAEo0BkGgMgERjACQa
      AyDRGACJxgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJxgBItC8SO23P6i8PFAAAAABJRU5E
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Revenue vs. Expenditure' width='192'>
      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
      r0sOHh8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Revenue vs. Expenditure (2)' width='192'>
      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
      pQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
